Terminals unused in grammar

   IDENT
   CHARLIT
   STRING
   TIMESEQ
   DIVEQ
   MODEQ
   SHLEQ
   SHREQ
   ANDEQ
   OREQ
   XOREQ
   PLUSEQ
   MINUSEQ
   INDSEL
   PLUSPLUS
   MINUSMINUS
   SHL
   SHR
   LTEQ
   GTEQ
   EQEQ
   NOTEQ
   LOGAND
   LOGOR
   AUTO
   BREAK
   CASE
   CHAR
   CONST
   ELLIPSIS
   CONTINUE
   DEFAULT
   DO
   DOUBLE
   ELSE
   ENUM
   EXTERN
   FLOAT
   FOR
   GOTO
   IF
   INLINE
   INT
   LONG
   REGISTER
   RESTRICT
   RETURN
   SHORT
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   SWITCH
   TYPEDEF
   TYPEDEF_NAME
   UNION
   UNSIGNED
   VOID
   VOLATILE
   WHILE
   _BOOL
   _COMPLEX
   _IMAGINARY


Grammar

    0 $accept: calculation $end

    1 calculation: /* empty */
    2            | calculation line

    3 line: '\n'
    4     | exp '\n'

    5 exp: NUMBER
    6    | exp '+' exp
    7    | exp '-' exp
    8    | exp '*' exp
    9    | exp '/' exp
   10    | '-' exp
   11    | exp '^' exp
   12    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4
'(' (40) 12
')' (41) 12
'*' (42) 8
'+' (43) 6
'-' (45) 7 10
'/' (47) 9
'^' (94) 11
error (256)
IDENT (258)
CHARLIT (259)
STRING (260)
NUMBER (261) 5
TIMESEQ (262)
DIVEQ (263)
MODEQ (264)
SHLEQ (265)
SHREQ (266)
ANDEQ (267)
OREQ (268)
XOREQ (269)
PLUSEQ (270)
MINUSEQ (271)
INDSEL (272)
PLUSPLUS (273)
MINUSMINUS (274)
SHL (275)
SHR (276)
LTEQ (277)
GTEQ (278)
EQEQ (279)
NOTEQ (280)
LOGAND (281)
LOGOR (282)
AUTO (283)
BREAK (284)
CASE (285)
CHAR (286)
CONST (287)
ELLIPSIS (288)
CONTINUE (289)
DEFAULT (290)
DO (291)
DOUBLE (292)
ELSE (293)
ENUM (294)
EXTERN (295)
FLOAT (296)
FOR (297)
GOTO (298)
IF (299)
INLINE (300)
INT (301)
LONG (302)
REGISTER (303)
RESTRICT (304)
RETURN (305)
SHORT (306)
SIGNED (307)
SIZEOF (308)
STATIC (309)
STRUCT (310)
SWITCH (311)
TYPEDEF (312)
TYPEDEF_NAME (313)
UNION (314)
UNSIGNED (315)
VOID (316)
VOLATILE (317)
WHILE (318)
_BOOL (319)
_COMPLEX (320)
_IMAGINARY (321)
NEG (322)


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
calculation (77)
    on left: 1 2, on right: 0 2
line (78)
    on left: 3 4, on right: 2
exp (79)
    on left: 5 6 7 8 9 10 11 12, on right: 4 6 7 8 9 10 11 12


state 0

    0 $accept: . calculation $end

    $default  reduce using rule 1 (calculation)

    calculation  go to state 1


state 1

    0 $accept: calculation . $end
    2 calculation: calculation . line

    $end    shift, and go to state 2
    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '\n'    shift, and go to state 5
    '('     shift, and go to state 6

    line  go to state 7
    exp   go to state 8


state 2

    0 $accept: calculation $end .

    $default  accept


state 3

    5 exp: NUMBER .

    $default  reduce using rule 5 (exp)


state 4

   10 exp: '-' . exp

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 6

    exp  go to state 9


state 5

    3 line: '\n' .

    $default  reduce using rule 3 (line)


state 6

   12 exp: '(' . exp ')'

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 6

    exp  go to state 10


state 7

    2 calculation: calculation line .

    $default  reduce using rule 2 (calculation)


state 8

    4 line: exp . '\n'
    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp

    '-'   shift, and go to state 11
    '+'   shift, and go to state 12
    '*'   shift, and go to state 13
    '/'   shift, and go to state 14
    '^'   shift, and go to state 15
    '\n'  shift, and go to state 16


state 9

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   10    | '-' exp .
   11    | exp . '^' exp

    '^'  shift, and go to state 15

    $default  reduce using rule 10 (exp)


state 10

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp
   12    | '(' exp . ')'

    '-'  shift, and go to state 11
    '+'  shift, and go to state 12
    '*'  shift, and go to state 13
    '/'  shift, and go to state 14
    '^'  shift, and go to state 15
    ')'  shift, and go to state 17


state 11

    7 exp: exp '-' . exp

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 6

    exp  go to state 18


state 12

    6 exp: exp '+' . exp

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 6

    exp  go to state 19


state 13

    8 exp: exp '*' . exp

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 6

    exp  go to state 20


state 14

    9 exp: exp '/' . exp

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 6

    exp  go to state 21


state 15

   11 exp: exp '^' . exp

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 6

    exp  go to state 22


state 16

    4 line: exp '\n' .

    $default  reduce using rule 4 (line)


state 17

   12 exp: '(' exp ')' .

    $default  reduce using rule 12 (exp)


state 18

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    7    | exp '-' exp .
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp

    '*'  shift, and go to state 13
    '/'  shift, and go to state 14
    '^'  shift, and go to state 15

    $default  reduce using rule 7 (exp)


state 19

    6 exp: exp . '+' exp
    6    | exp '+' exp .
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp

    '*'  shift, and go to state 13
    '/'  shift, and go to state 14
    '^'  shift, and go to state 15

    $default  reduce using rule 6 (exp)


state 20

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    8    | exp '*' exp .
    9    | exp . '/' exp
   11    | exp . '^' exp

    '^'  shift, and go to state 15

    $default  reduce using rule 8 (exp)


state 21

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
    9    | exp '/' exp .
   11    | exp . '^' exp

    '^'  shift, and go to state 15

    $default  reduce using rule 9 (exp)


state 22

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp
   11    | exp '^' exp .

    '^'  shift, and go to state 15

    $default  reduce using rule 11 (exp)
