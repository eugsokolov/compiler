Nonterminals useless in grammar

   compound_statement
   statement_list
   statement
   declaration
   identifier_list
   logical
   assignment
   val
   line
   exp


Terminals unused in grammar

   CHARLIT
   IDENT
   STRING
   NUMBER
   INDSEL
   PLUSPLUS
   MINUSMINUS
   SHL
   SHR
   LTEQ
   GTEQ
   EQEQ
   NOTEQ
   LOGAND
   LOGOR
   ELLIPSIS
   TIMESEQ
   DIVEQ
   MODEQ
   PLUSEQ
   MINUSEQ
   SHLEQ
   SHREQ
   ANDEQ
   OREQ
   XOREQ
   AUTO
   BREAK
   CASE
   CHAR
   CONST
   CONTINUE
   DEFAULT
   DO
   DOUBLE
   ELSE
   ENUM
   EXTERN
   FLOAT
   FOR
   GOTO
   IF
   INLINE
   INT
   LONG
   REGISTER
   RESTRICT
   RETURN
   SHORT
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   SWITCH
   TYPEDEF
   TYPEDEF_NAME
   UNION
   UNSIGNED
   VOID
   VOLATILE
   WHILE
   _BOOL
   _COMPLEX
   _IMAGINARY
   '-'
   '+'
   '*'
   '/'
   '^'
   '{'
   '}'
   ';'
   ','
   '|'
   '&'
   '?'
   ':'
   '='
   '\n'
   '('
   ')'


Rules useless in grammar

    2 compound_statement: '{' statement_list '}'

    3 statement_list: statement
    4               | statement_list statement

    5 statement: declaration
    6          | /* empty */

    7 declaration: INT identifier_list ';'

    8 identifier_list: IDENT
    9                | identifier_list ',' IDENT

   10 logical: exp '|' exp
   11        | exp '&' exp
   12        | exp '^' exp
   13        | exp LOGOR exp
   14        | exp LOGAND exp
   15        | exp '?' exp ':' exp

   16 assignment: val '=' exp
   17           | val TIMESEQ exp
   18           | val DIVEQ exp
   19           | val PLUSEQ exp
   20           | val MINUSEQ exp
   21           | val SHLEQ exp
   22           | val SHREQ exp
   23           | val ANDEQ exp
   24           | val OREQ exp
   25           | val XOREQ exp

   26 val: IDENT

   27 line: '\n'
   28     | exp '\n'

   29 exp: NUMBER
   30    | exp '+' exp
   31    | exp '-' exp
   32    | exp '*' exp
   33    | exp '/' exp
   34    | '-' exp
   35    | exp '^' exp
   36    | '(' exp ')'


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */


Terminals, with rules where they appear

$end (0) 0
'\n' (10)
'&' (38)
'(' (40)
')' (41)
'*' (42)
'+' (43)
',' (44)
'-' (45)
'/' (47)
':' (58)
';' (59)
'=' (61)
'?' (63)
'^' (94)
'{' (123)
'|' (124)
'}' (125)
error (256)
CHARLIT (258)
IDENT (259)
STRING (260)
NUMBER (261)
INDSEL (262)
PLUSPLUS (263)
MINUSMINUS (264)
SHL (265)
SHR (266)
LTEQ (267)
GTEQ (268)
EQEQ (269)
NOTEQ (270)
LOGAND (271)
LOGOR (272)
ELLIPSIS (273)
TIMESEQ (274)
DIVEQ (275)
MODEQ (276)
PLUSEQ (277)
MINUSEQ (278)
SHLEQ (279)
SHREQ (280)
ANDEQ (281)
OREQ (282)
XOREQ (283)
AUTO (284)
BREAK (285)
CASE (286)
CHAR (287)
CONST (288)
CONTINUE (289)
DEFAULT (290)
DO (291)
DOUBLE (292)
ELSE (293)
ENUM (294)
EXTERN (295)
FLOAT (296)
FOR (297)
GOTO (298)
IF (299)
INLINE (300)
INT (301)
LONG (302)
REGISTER (303)
RESTRICT (304)
RETURN (305)
SHORT (306)
SIGNED (307)
SIZEOF (308)
STATIC (309)
STRUCT (310)
SWITCH (311)
TYPEDEF (312)
TYPEDEF_NAME (313)
UNION (314)
UNSIGNED (315)
VOID (316)
VOLATILE (317)
WHILE (318)
_BOOL (319)
_COMPLEX (320)
_IMAGINARY (321)


Nonterminals, with rules where they appear

$accept (84)
    on left: 0
translation_unit (85)
    on left: 1, on right: 0


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end

    $end  shift, and go to state 2


state 2

    0 $accept: translation_unit $end .

    $default  accept
