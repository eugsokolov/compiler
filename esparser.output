Nonterminals useless in grammar

   initializer
   initializer_list
   designation
   designator_list
   designator


Terminals unused in grammar

   CHARLIT
   STRING
   INLINE
   REGISTER
   _IMAGINARY


Rules useless in grammar

  287 initializer: assignment_expression
  288            | '{' initializer_list '}'
  289            | '{' initializer_list ',' '}'

  290 initializer_list: initializer
  291                 | initializer_list ',' initializer
  292                 | designation initializer
  293                 | initializer_list ',' designation initializer

  294 designation: designator_list '='

  295 designator_list: designator
  296                | designator_list designator

  297 designator: '[' constant_expression ']'
  298           | '.' IDENT


Rules useless in parser due to conflicts

  134 pointer: '*'
  135        | '*' type_qualifier_list
  136        | '*' type_qualifier_list pointer
  137        | '*' pointer

  249 conditional_statement: if_statement
  250                      | if_else_statement

  253 iterative_statement: do_statement
  254                    | while_statement
  255                    | for_statement


State 9 conflicts: 1 shift/reduce
State 10 conflicts: 3 shift/reduce
State 12 conflicts: 1 shift/reduce
State 13 conflicts: 4 shift/reduce
State 19 conflicts: 4 shift/reduce
State 61 conflicts: 1 shift/reduce
State 65 conflicts: 2 shift/reduce
State 66 conflicts: 1 shift/reduce
State 75 conflicts: 2 shift/reduce
State 76 conflicts: 1 shift/reduce
State 79 conflicts: 5 reduce/reduce
State 107 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 120 conflicts: 5 reduce/reduce
State 121 conflicts: 5 reduce/reduce
State 150 conflicts: 5 reduce/reduce
State 214 conflicts: 28 reduce/reduce
State 215 conflicts: 28 reduce/reduce
State 216 conflicts: 28 reduce/reduce
State 217 conflicts: 28 reduce/reduce
State 218 conflicts: 28 reduce/reduce
State 230 conflicts: 1 shift/reduce
State 325 conflicts: 1 reduce/reduce
State 426 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 declaration: INT identifier_list ';'

    2 declaration_specifier: storage_class_specifier
    3                      | storage_class_specifier declaration_specifier
    4                      | typedef_definition
    5                      | typedef_definition declaration_specifier
    6                      | type_specifier
    7                      | type_specifier declaration_specifier
    8                      | type_qualifier
    9                      | type_qualifier declaration_specifier

   10 storage_class_specifier: AUTO
   11                        | EXTERN
   12                        | STATIC

   13 typedef_definition: TYPEDEF

   14 type_specifier: enumeration_type_specifier
   15               | floating_point_specifier
   16               | integer_type_specifier
   17               | structure_type_specifier
   18               | typedef_name
   19               | union_type_specifier
   20               | void_type_specifier

   21 type_qualifier: CONST
   22               | VOLATILE
   23               | RESTRICT

   24 declarator: pointer_declarator
   25           | direct_declarator

   26 direct_declarator: simple_declarator
   27                  | '(' declarator ')'
   28                  | function_declarator
   29                  | array_declarator

   30 simple_declarator: IDENT

   31 pointer_declarator: pointer direct_declarator

   32 pointer: '*'
   33        | '*' type_qualifier_list
   34        | '*' type_qualifier_list pointer
   35        | '*' pointer

   36 type_qualifier_list: type_qualifier
   37                    | type_qualifier_list type_qualifier

   38 array_declarator: direct_declarator '[' ']'
   39                 | direct_declarator '[' constant_expression ']'

   40 constant_expression: conditional_expression

   41 function_declarator: direct_declarator '(' parameter_type_list ')'
   42                    | direct_declarator '(' ')'
   43                    | direct_declarator '(' identifier_list ')'

   44 parameter_type_list: parameter_list
   45                    | parameter_list ',' ELLIPSIS

   46 parameter_list: parameter_declaration
   47               | parameter_list ',' parameter_declaration

   48 parameter_declaration: declaration_specifier declarator
   49                      | declaration_specifier
   50                      | declaration_specifier abstract_declarator

   51 identifier_list: IDENT
   52                | identifier_list ',' IDENT

   53 integer_type_specifier: signed_type_specifier
   54                       | unsigned_type_specifier
   55                       | character_type_specifier
   56                       | bool_type_specifier

   57 unsigned_type_specifier: UNSIGNED SHORT
   58                        | UNSIGNED SHORT INT
   59                        | UNSIGNED
   60                        | UNSIGNED INT
   61                        | UNSIGNED LONG
   62                        | UNSIGNED LONG INT
   63                        | UNSIGNED LONG LONG
   64                        | UNSIGNED LONG LONG INT

   65 signed_type_specifier: SHORT
   66                      | SHORT INT
   67                      | SIGNED SHORT
   68                      | SIGNED SHORT INT
   69                      | INT
   70                      | SIGNED INT
   71                      | SIGNED
   72                      | LONG
   73                      | LONG INT
   74                      | SIGNED LONG
   75                      | SIGNED LONG INT
   76                      | LONG LONG
   77                      | LONG LONG INT
   78                      | SIGNED LONG LONG
   79                      | SIGNED LONG LONG INT

   80 character_type_specifier: CHAR
   81                         | SIGNED CHAR
   82                         | UNSIGNED CHAR

   83 floating_point_specifier: FLOAT
   84                         | DOUBLE
   85                         | LONG DOUBLE
   86                         | complex_type_specifier

   87 complex_type_specifier: FLOAT _COMPLEX
   88                       | DOUBLE _COMPLEX
   89                       | LONG DOUBLE _COMPLEX

   90 void_type_specifier: VOID

   91 bool_type_specifier: _BOOL

   92 enumeration_type_specifier: enumeration_type_definition
   93                           | enumeration_type_reference

   94 enumeration_type_definition: ENUM '{' enumeration_definition_list '}'
   95                            | ENUM enumeration_tag '{' enumeration_definition_list '}'
   96                            | ENUM '{' enumeration_definition_list ',' '}'
   97                            | ENUM enumeration_tag '{' enumeration_definition_list ',' '}'

   98 enumeration_type_reference: ENUM enumeration_tag

   99 enumeration_tag: IDENT

  100 enumeration_definition_list: enumeration_constant_definition
  101                            | enumeration_definition_list ',' enumeration_constant_definition

  102 enumeration_constant_definition: enumeration_constant
  103                                | enumeration_constant '=' expression

  104 enumeration_constant: IDENT

  105 structure_type_specifier: structure_type_definition
  106                         | structure_type_reference

  107 structure_type_definition: STRUCT '{' field_list '}'
  108                          | STRUCT structure_tag '{' field_list '}'

  109 structure_type_reference: STRUCT structure_tag

  110 structure_tag: IDENT

  111 field_list: component_declaration
  112           | field_list component_declaration

  113 component_declaration: type_specifier component_declaration_list ';'

  114 component_declaration_list: component_declarator
  115                           | component_declaration_list ',' component_declarator

  116 component_declarator: simple_component
  117                     | bit_field

  118 simple_component: declarator

  119 bit_field: ':' width
  120          | declarator ':' width

  121 width: constant_expression

  122 union_type_specifier: union_type_definition
  123                     | union_type_reference

  124 union_type_definition: UNION '{' field_list '}'
  125                      | UNION union_tag '{' field_list '}'

  126 union_type_reference: UNION union_tag

  127 union_tag: IDENT

  128 typedef_name: TYPEDEF_NAME

  129 type_name: declaration_specifier
  130          | declaration_specifier abstract_declarator

  131 abstract_declarator: pointer
  132                    | direct_abstract_declarator
  133                    | pointer direct_abstract_declarator

  134 pointer: '*'
  135        | '*' type_qualifier_list
  136        | '*' type_qualifier_list pointer
  137        | '*' pointer

  138 direct_abstract_declarator: '(' abstract_declarator ')'
  139                           | '[' ']'
  140                           | direct_abstract_declarator '[' ']'
  141                           | direct_abstract_declarator '[' constant_expression ']'
  142                           | '[' constant_expression ']'
  143                           | '[' expression ']'
  144                           | direct_abstract_declarator '[' expression ']'
  145                           | '[' '*' ']'
  146                           | direct_abstract_declarator '[' '*' ']'
  147                           | '(' ')'
  148                           | direct_abstract_declarator '(' ')'
  149                           | direct_abstract_declarator '(' parameter_type_list ')'
  150                           | '(' parameter_type_list ')'

  151 primary_expression: IDENT
  152                   | NUMBER
  153                   | '(' expression ')'

  154 postfix_expression: primary_expression
  155                   | postfix_expression '[' expression ']'
  156                   | postfix_expression '.' IDENT
  157                   | postfix_expression INDSEL IDENT
  158                   | function_call
  159                   | postfix_expression PLUSPLUS
  160                   | postfix_expression MINUSMINUS

  161 function_call: postfix_expression '(' ')'
  162              | postfix_expression '(' expression_list ')'

  163 expression_list: assignment_expression
  164                | expression_list ',' assignment_expression

  165 cast_expression: unary_expression
  166                | '(' INT ')' cast_expression

  167 unary_expression: postfix_expression
  168                 | SIZEOF '(' type_name ')'
  169                 | SIZEOF '(' unary_expression ')'
  170                 | '-' cast_expression
  171                 | '+' cast_expression
  172                 | '!' cast_expression
  173                 | '~' cast_expression
  174                 | '&' cast_expression
  175                 | '*' cast_expression
  176                 | PLUSPLUS unary_expression
  177                 | MINUSMINUS unary_expression

  178 multiplicative_expression: cast_expression
  179                          | multiplicative_expression '*' cast_expression
  180                          | multiplicative_expression '/' cast_expression
  181                          | multiplicative_expression '%' cast_expression

  182 additive_expression: multiplicative_expression
  183                    | additive_expression '+' multiplicative_expression
  184                    | additive_expression '-' multiplicative_expression

  185 shift_expression: additive_expression
  186                 | shift_expression SHL additive_expression
  187                 | shift_expression SHR additive_expression

  188 relational_expression: shift_expression
  189                      | relational_expression '<' shift_expression
  190                      | relational_expression LTEQ shift_expression
  191                      | relational_expression '>' shift_expression
  192                      | relational_expression GTEQ shift_expression

  193 equality_expression: relational_expression
  194                    | equality_expression EQEQ relational_expression
  195                    | equality_expression NOTEQ relational_expression

  196 bit_or_expression: bit_xor_expression
  197                  | bit_or_expression '|' bit_xor_expression

  198 bit_xor_expression: bit_and_expression
  199                   | bit_xor_expression '^' bit_and_expression

  200 bit_and_expression: equality_expression
  201                   | bit_and_expression '&' equality_expression

  202 logical_or_expression: logical_and_expression
  203                      | logical_or_expression LOGOR logical_and_expression

  204 logical_and_expression: bit_or_expression
  205                       | logical_and_expression LOGAND bit_or_expression

  206 conditional_expression: logical_or_expression
  207                       | logical_or_expression '?' expression ':' conditional_expression

  208 assignment_expression: conditional_expression
  209                      | unary_expression '=' assignment_expression
  210                      | unary_expression PLUSEQ assignment_expression
  211                      | unary_expression MINUSEQ assignment_expression
  212                      | unary_expression TIMESEQ assignment_expression
  213                      | unary_expression DIVEQ assignment_expression
  214                      | unary_expression MODEQ assignment_expression
  215                      | unary_expression SHLEQ assignment_expression
  216                      | unary_expression SHREQ assignment_expression
  217                      | unary_expression ANDEQ assignment_expression
  218                      | unary_expression OREQ assignment_expression
  219                      | unary_expression XOREQ assignment_expression

  220 expression: assignment_expression
  221           | expression ',' assignment_expression

  222 statement: expression ';'
  223          | labeled_statement
  224          | compound_statement
  225          | conditional_statement
  226          | iterative_statement
  227          | switch_statement
  228          | break_statement
  229          | continue_statement
  230          | return_statement
  231          | goto_statement
  232          | null_statement

  233 conditional_statement: if_statement
  234                      | if_else_statement

  235 iterative_statement: do_statement
  236                    | while_statement
  237                    | for_statement

  238 labeled_statement: label ':' statement

  239 label: named_label
  240      | case_label
  241      | default_label

  242 compound_statement: '{' '}'

  243 $@1: /* empty */

  244 compound_statement: '{' $@1 declaration_or_statement_list '}'

  245 declaration_or_statement_list: declaration_or_statement
  246                              | declaration_or_statement_list declaration_or_statement

  247 declaration_or_statement: declaration
  248                         | statement

  249 conditional_statement: if_statement
  250                      | if_else_statement

  251 if_statement: IF '(' expression ')' statement

  252 if_else_statement: IF '(' expression ')' statement ELSE statement

  253 iterative_statement: do_statement
  254                    | while_statement
  255                    | for_statement

  256 do_statement: DO statement WHILE '(' expression ')' ';'

  257 while_statement: WHILE '(' expression ')' statement

  258 for_statement: FOR for_expression statement

  259 for_expression: '(' ';' ';' ')'
  260               | '(' initial_clause ';' ';' ')'
  261               | '(' ';' expression ';' ')'
  262               | '(' ';' ';' expression ')'
  263               | '(' initial_clause ';' expression ';' ')'
  264               | '(' ';' expression ';' expression ')'
  265               | '(' initial_clause ';' expression ';' expression ')'

  266 initial_clause: expression
  267               | declaration

  268 switch_statement: SWITCH '(' expression ')' statement

  269 case_label: CASE constant_expression

  270 default_label: DEFAULT

  271 break_statement: BREAK ';'

  272 continue_statement: CONTINUE ';'

  273 return_statement: RETURN ';'
  274                 | RETURN expression ';'

  275 goto_statement: GOTO named_label ';'

  276 named_label: IDENT

  277 null_statement: ';'

  278 translation_unit: top_level_declaration
  279                 | translation_unit top_level_declaration

  280 top_level_declaration: declaration
  281                      | function_definition

  282 function_definition: function_specifier compound_statement

  283 function_specifier: IDENT '(' ')'
  284                   | declaration_specifier declarator declaration_list

  285 declaration_list: declaration
  286                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 172
'%' (37) 181
'&' (38) 174 201
'(' (40) 27 41 42 43 138 147 148 149 150 153 161 162 166 168 169 251
    252 256 257 259 260 261 262 263 264 265 268 283
')' (41) 27 41 42 43 138 147 148 149 150 153 161 162 166 168 169 251
    252 256 257 259 260 261 262 263 264 265 268 283
'*' (42) 32 33 34 35 134 135 136 137 145 146 175 179
'+' (43) 171 183
',' (44) 45 47 52 96 97 101 115 164 221
'-' (45) 170 184
'.' (46) 156
'/' (47) 180
':' (58) 119 120 207 238
';' (59) 1 113 222 256 259 260 261 262 263 264 265 271 272 273 274
    275 277
'<' (60) 189
'=' (61) 103 209
'>' (62) 191
'?' (63) 207
'[' (91) 38 39 139 140 141 142 143 144 145 146 155
']' (93) 38 39 139 140 141 142 143 144 145 146 155
'^' (94) 199
'{' (123) 94 95 96 97 107 108 124 125 242 244
'|' (124) 197
'}' (125) 94 95 96 97 107 108 124 125 242 244
'~' (126) 173
error (256)
CHARLIT (258)
IDENT (259) 30 51 52 99 104 110 127 151 156 157 276 283
STRING (260)
NUMBER (261) 152
INDSEL (262) 157
PLUSPLUS (263) 159 176
MINUSMINUS (264) 160 177
SHL (265) 186
SHR (266) 187
LTEQ (267) 190
GTEQ (268) 192
EQEQ (269) 194
NOTEQ (270) 195
LOGAND (271) 205
LOGOR (272) 203
ELLIPSIS (273) 45
TIMESEQ (274) 212
DIVEQ (275) 213
MODEQ (276) 214
PLUSEQ (277) 210
MINUSEQ (278) 211
SHLEQ (279) 215
SHREQ (280) 216
ANDEQ (281) 217
OREQ (282) 218
XOREQ (283) 219
AUTO (284) 10
BREAK (285) 271
CASE (286) 269
CHAR (287) 80 81 82
CONST (288) 21
CONTINUE (289) 272
DEFAULT (290) 270
DO (291) 256
DOUBLE (292) 84 85 88 89
ELSE (293) 252
ENUM (294) 94 95 96 97 98
EXTERN (295) 11
FLOAT (296) 83 87
FOR (297) 258
GOTO (298) 275
IF (299) 251 252
INLINE (300)
INT (301) 1 58 60 62 64 66 68 69 70 73 75 77 79 166
LONG (302) 61 62 63 64 72 73 74 75 76 77 78 79 85 89
REGISTER (303)
RESTRICT (304) 23
RETURN (305) 273 274
SHORT (306) 57 58 65 66 67 68
SIGNED (307) 67 68 70 71 74 75 78 79 81
SIZEOF (308) 168 169
STATIC (309) 12
STRUCT (310) 107 108 109
SWITCH (311) 268
TYPEDEF (312) 13
TYPEDEF_NAME (313) 128
UNION (314) 124 125 126
UNSIGNED (315) 57 58 59 60 61 62 63 64 82
VOID (316) 90
VOLATILE (317) 22
WHILE (318) 256 257
_BOOL (319) 91
_COMPLEX (320) 87 88 89
_IMAGINARY (321)


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
declaration (92)
    on left: 1, on right: 247 267 280 285 286
declaration_specifier (93)
    on left: 2 3 4 5 6 7 8 9, on right: 3 5 7 9 48 49 50 129 130 284
storage_class_specifier (94)
    on left: 10 11 12, on right: 2 3
typedef_definition (95)
    on left: 13, on right: 4 5
type_specifier (96)
    on left: 14 15 16 17 18 19 20, on right: 6 7 113
type_qualifier (97)
    on left: 21 22 23, on right: 8 9 36 37
declarator (98)
    on left: 24 25, on right: 27 48 118 120 284
direct_declarator (99)
    on left: 26 27 28 29, on right: 25 31 38 39 41 42 43
simple_declarator (100)
    on left: 30, on right: 26
pointer_declarator (101)
    on left: 31, on right: 24
pointer (102)
    on left: 32 33 34 35 134 135 136 137, on right: 31 34 35 131 133
    136 137
type_qualifier_list (103)
    on left: 36 37, on right: 33 34 37 135 136
array_declarator (104)
    on left: 38 39, on right: 29
constant_expression (105)
    on left: 40, on right: 39 121 141 142 269
function_declarator (106)
    on left: 41 42 43, on right: 28
parameter_type_list (107)
    on left: 44 45, on right: 41 149 150
parameter_list (108)
    on left: 46 47, on right: 44 45 47
parameter_declaration (109)
    on left: 48 49 50, on right: 46 47
identifier_list (110)
    on left: 51 52, on right: 1 43 52
integer_type_specifier (111)
    on left: 53 54 55 56, on right: 16
unsigned_type_specifier (112)
    on left: 57 58 59 60 61 62 63 64, on right: 54
signed_type_specifier (113)
    on left: 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79, on right:
    53
character_type_specifier (114)
    on left: 80 81 82, on right: 55
floating_point_specifier (115)
    on left: 83 84 85 86, on right: 15
complex_type_specifier (116)
    on left: 87 88 89, on right: 86
void_type_specifier (117)
    on left: 90, on right: 20
bool_type_specifier (118)
    on left: 91, on right: 56
enumeration_type_specifier (119)
    on left: 92 93, on right: 14
enumeration_type_definition (120)
    on left: 94 95 96 97, on right: 92
enumeration_type_reference (121)
    on left: 98, on right: 93
enumeration_tag (122)
    on left: 99, on right: 95 97 98
enumeration_definition_list (123)
    on left: 100 101, on right: 94 95 96 97 101
enumeration_constant_definition (124)
    on left: 102 103, on right: 100 101
enumeration_constant (125)
    on left: 104, on right: 102 103
structure_type_specifier (126)
    on left: 105 106, on right: 17
structure_type_definition (127)
    on left: 107 108, on right: 105
structure_type_reference (128)
    on left: 109, on right: 106
structure_tag (129)
    on left: 110, on right: 108 109
field_list (130)
    on left: 111 112, on right: 107 108 112 124 125
component_declaration (131)
    on left: 113, on right: 111 112
component_declaration_list (132)
    on left: 114 115, on right: 113 115
component_declarator (133)
    on left: 116 117, on right: 114 115
simple_component (134)
    on left: 118, on right: 116
bit_field (135)
    on left: 119 120, on right: 117
width (136)
    on left: 121, on right: 119 120
union_type_specifier (137)
    on left: 122 123, on right: 19
union_type_definition (138)
    on left: 124 125, on right: 122
union_type_reference (139)
    on left: 126, on right: 123
union_tag (140)
    on left: 127, on right: 125 126
typedef_name (141)
    on left: 128, on right: 18
type_name (142)
    on left: 129 130, on right: 168
abstract_declarator (143)
    on left: 131 132 133, on right: 50 130 138
direct_abstract_declarator (144)
    on left: 138 139 140 141 142 143 144 145 146 147 148 149 150, on right:
    132 133 140 141 144 146 148 149
primary_expression (145)
    on left: 151 152 153, on right: 154
postfix_expression (146)
    on left: 154 155 156 157 158 159 160, on right: 155 156 157 159
    160 161 162 167
function_call (147)
    on left: 161 162, on right: 158
expression_list (148)
    on left: 163 164, on right: 162 164
cast_expression (149)
    on left: 165 166, on right: 166 170 171 172 173 174 175 178 179
    180 181
unary_expression (150)
    on left: 167 168 169 170 171 172 173 174 175 176 177, on right:
    165 169 176 177 209 210 211 212 213 214 215 216 217 218 219
multiplicative_expression (151)
    on left: 178 179 180 181, on right: 179 180 181 182 183 184
additive_expression (152)
    on left: 182 183 184, on right: 183 184 185 186 187
shift_expression (153)
    on left: 185 186 187, on right: 186 187 188 189 190 191 192
relational_expression (154)
    on left: 188 189 190 191 192, on right: 189 190 191 192 193 194
    195
equality_expression (155)
    on left: 193 194 195, on right: 194 195 200 201
bit_or_expression (156)
    on left: 196 197, on right: 197 204 205
bit_xor_expression (157)
    on left: 198 199, on right: 196 197 199
bit_and_expression (158)
    on left: 200 201, on right: 198 199 201
logical_or_expression (159)
    on left: 202 203, on right: 203 206 207
logical_and_expression (160)
    on left: 204 205, on right: 202 203 205
conditional_expression (161)
    on left: 206 207, on right: 40 207 208
assignment_expression (162)
    on left: 208 209 210 211 212 213 214 215 216 217 218 219, on right:
    163 164 209 210 211 212 213 214 215 216 217 218 219 220 221
expression (163)
    on left: 220 221, on right: 103 143 144 153 155 207 221 222 251
    252 256 257 261 262 263 264 265 266 268 274
statement (164)
    on left: 222 223 224 225 226 227 228 229 230 231 232, on right:
    238 248 251 252 256 257 258 268
conditional_statement (165)
    on left: 233 234 249 250, on right: 225
iterative_statement (166)
    on left: 235 236 237 253 254 255, on right: 226
labeled_statement (167)
    on left: 238, on right: 223
label (168)
    on left: 239 240 241, on right: 238
compound_statement (169)
    on left: 242 244, on right: 224 282
$@1 (170)
    on left: 243, on right: 244
declaration_or_statement_list (171)
    on left: 245 246, on right: 244 246
declaration_or_statement (172)
    on left: 247 248, on right: 245 246
if_statement (173)
    on left: 251, on right: 233 249
if_else_statement (174)
    on left: 252, on right: 234 250
do_statement (175)
    on left: 256, on right: 235 253
while_statement (176)
    on left: 257, on right: 236 254
for_statement (177)
    on left: 258, on right: 237 255
for_expression (178)
    on left: 259 260 261 262 263 264 265, on right: 258
initial_clause (179)
    on left: 266 267, on right: 260 263 265
switch_statement (180)
    on left: 268, on right: 227
case_label (181)
    on left: 269, on right: 240
default_label (182)
    on left: 270, on right: 241
break_statement (183)
    on left: 271, on right: 228
continue_statement (184)
    on left: 272, on right: 229
return_statement (185)
    on left: 273 274, on right: 230
goto_statement (186)
    on left: 275, on right: 231
named_label (187)
    on left: 276, on right: 239 275
null_statement (188)
    on left: 277, on right: 232
translation_unit (189)
    on left: 278 279, on right: 0 279
top_level_declaration (190)
    on left: 280 281, on right: 278 279
function_definition (191)
    on left: 282, on right: 281
function_specifier (192)
    on left: 283 284, on right: 282
declaration_list (193)
    on left: 285 286, on right: 284 286


state 0

    0 $accept: . translation_unit $end

    IDENT         shift, and go to state 1
    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 9
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22

    declaration                  go to state 23
    declaration_specifier        go to state 24
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46
    translation_unit             go to state 47
    top_level_declaration        go to state 48
    function_definition          go to state 49
    function_specifier           go to state 50


state 1

  283 function_specifier: IDENT . '(' ')'

    '('  shift, and go to state 51


state 2

   10 storage_class_specifier: AUTO .

    $default  reduce using rule 10 (storage_class_specifier)


state 3

   80 character_type_specifier: CHAR .

    $default  reduce using rule 80 (character_type_specifier)


state 4

   21 type_qualifier: CONST .

    $default  reduce using rule 21 (type_qualifier)


state 5

   84 floating_point_specifier: DOUBLE .
   88 complex_type_specifier: DOUBLE . _COMPLEX

    _COMPLEX  shift, and go to state 52

    $default  reduce using rule 84 (floating_point_specifier)


state 6

   94 enumeration_type_definition: ENUM . '{' enumeration_definition_list '}'
   95                            | ENUM . enumeration_tag '{' enumeration_definition_list '}'
   96                            | ENUM . '{' enumeration_definition_list ',' '}'
   97                            | ENUM . enumeration_tag '{' enumeration_definition_list ',' '}'
   98 enumeration_type_reference: ENUM . enumeration_tag

    IDENT  shift, and go to state 53
    '{'    shift, and go to state 54

    enumeration_tag  go to state 55


state 7

   11 storage_class_specifier: EXTERN .

    $default  reduce using rule 11 (storage_class_specifier)


state 8

   83 floating_point_specifier: FLOAT .
   87 complex_type_specifier: FLOAT . _COMPLEX

    _COMPLEX  shift, and go to state 56

    $default  reduce using rule 83 (floating_point_specifier)


state 9

    1 declaration: INT . identifier_list ';'
   69 signed_type_specifier: INT .

    IDENT  shift, and go to state 57

    IDENT     [reduce using rule 69 (signed_type_specifier)]
    $default  reduce using rule 69 (signed_type_specifier)

    identifier_list  go to state 58


state 10

   72 signed_type_specifier: LONG .
   73                      | LONG . INT
   76                      | LONG . LONG
   77                      | LONG . LONG INT
   85 floating_point_specifier: LONG . DOUBLE
   89 complex_type_specifier: LONG . DOUBLE _COMPLEX

    DOUBLE  shift, and go to state 59
    INT     shift, and go to state 60
    LONG    shift, and go to state 61

    DOUBLE    [reduce using rule 72 (signed_type_specifier)]
    INT       [reduce using rule 72 (signed_type_specifier)]
    LONG      [reduce using rule 72 (signed_type_specifier)]
    $default  reduce using rule 72 (signed_type_specifier)


state 11

   23 type_qualifier: RESTRICT .

    $default  reduce using rule 23 (type_qualifier)


state 12

   65 signed_type_specifier: SHORT .
   66                      | SHORT . INT

    INT  shift, and go to state 62

    INT       [reduce using rule 65 (signed_type_specifier)]
    $default  reduce using rule 65 (signed_type_specifier)


state 13

   67 signed_type_specifier: SIGNED . SHORT
   68                      | SIGNED . SHORT INT
   70                      | SIGNED . INT
   71                      | SIGNED .
   74                      | SIGNED . LONG
   75                      | SIGNED . LONG INT
   78                      | SIGNED . LONG LONG
   79                      | SIGNED . LONG LONG INT
   81 character_type_specifier: SIGNED . CHAR

    CHAR   shift, and go to state 63
    INT    shift, and go to state 64
    LONG   shift, and go to state 65
    SHORT  shift, and go to state 66

    CHAR      [reduce using rule 71 (signed_type_specifier)]
    INT       [reduce using rule 71 (signed_type_specifier)]
    LONG      [reduce using rule 71 (signed_type_specifier)]
    SHORT     [reduce using rule 71 (signed_type_specifier)]
    $default  reduce using rule 71 (signed_type_specifier)


state 14

   12 storage_class_specifier: STATIC .

    $default  reduce using rule 12 (storage_class_specifier)


state 15

  107 structure_type_definition: STRUCT . '{' field_list '}'
  108                          | STRUCT . structure_tag '{' field_list '}'
  109 structure_type_reference: STRUCT . structure_tag

    IDENT  shift, and go to state 67
    '{'    shift, and go to state 68

    structure_tag  go to state 69


state 16

   13 typedef_definition: TYPEDEF .

    $default  reduce using rule 13 (typedef_definition)


state 17

  128 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 128 (typedef_name)


state 18

  124 union_type_definition: UNION . '{' field_list '}'
  125                      | UNION . union_tag '{' field_list '}'
  126 union_type_reference: UNION . union_tag

    IDENT  shift, and go to state 70
    '{'    shift, and go to state 71

    union_tag  go to state 72


state 19

   57 unsigned_type_specifier: UNSIGNED . SHORT
   58                        | UNSIGNED . SHORT INT
   59                        | UNSIGNED .
   60                        | UNSIGNED . INT
   61                        | UNSIGNED . LONG
   62                        | UNSIGNED . LONG INT
   63                        | UNSIGNED . LONG LONG
   64                        | UNSIGNED . LONG LONG INT
   82 character_type_specifier: UNSIGNED . CHAR

    CHAR   shift, and go to state 73
    INT    shift, and go to state 74
    LONG   shift, and go to state 75
    SHORT  shift, and go to state 76

    CHAR      [reduce using rule 59 (unsigned_type_specifier)]
    INT       [reduce using rule 59 (unsigned_type_specifier)]
    LONG      [reduce using rule 59 (unsigned_type_specifier)]
    SHORT     [reduce using rule 59 (unsigned_type_specifier)]
    $default  reduce using rule 59 (unsigned_type_specifier)


state 20

   90 void_type_specifier: VOID .

    $default  reduce using rule 90 (void_type_specifier)


state 21

   22 type_qualifier: VOLATILE .

    $default  reduce using rule 22 (type_qualifier)


state 22

   91 bool_type_specifier: _BOOL .

    $default  reduce using rule 91 (bool_type_specifier)


state 23

  280 top_level_declaration: declaration .

    $default  reduce using rule 280 (top_level_declaration)


state 24

  284 function_specifier: declaration_specifier . declarator declaration_list

    IDENT  shift, and go to state 77
    '('    shift, and go to state 78
    '*'    shift, and go to state 79

    declarator           go to state 80
    direct_declarator    go to state 81
    simple_declarator    go to state 82
    pointer_declarator   go to state 83
    pointer              go to state 84
    array_declarator     go to state 85
    function_declarator  go to state 86


state 25

    2 declaration_specifier: storage_class_specifier .
    3                      | storage_class_specifier . declaration_specifier

    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22

    $default  reduce using rule 2 (declaration_specifier)

    declaration_specifier        go to state 88
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 26

    4 declaration_specifier: typedef_definition .
    5                      | typedef_definition . declaration_specifier

    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22

    $default  reduce using rule 4 (declaration_specifier)

    declaration_specifier        go to state 89
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 27

    6 declaration_specifier: type_specifier .
    7                      | type_specifier . declaration_specifier

    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22

    $default  reduce using rule 6 (declaration_specifier)

    declaration_specifier        go to state 90
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 28

    8 declaration_specifier: type_qualifier .
    9                      | type_qualifier . declaration_specifier

    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22

    $default  reduce using rule 8 (declaration_specifier)

    declaration_specifier        go to state 91
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 29

   16 type_specifier: integer_type_specifier .

    $default  reduce using rule 16 (type_specifier)


state 30

   54 integer_type_specifier: unsigned_type_specifier .

    $default  reduce using rule 54 (integer_type_specifier)


state 31

   53 integer_type_specifier: signed_type_specifier .

    $default  reduce using rule 53 (integer_type_specifier)


state 32

   55 integer_type_specifier: character_type_specifier .

    $default  reduce using rule 55 (integer_type_specifier)


state 33

   15 type_specifier: floating_point_specifier .

    $default  reduce using rule 15 (type_specifier)


state 34

   86 floating_point_specifier: complex_type_specifier .

    $default  reduce using rule 86 (floating_point_specifier)


state 35

   20 type_specifier: void_type_specifier .

    $default  reduce using rule 20 (type_specifier)


state 36

   56 integer_type_specifier: bool_type_specifier .

    $default  reduce using rule 56 (integer_type_specifier)


state 37

   14 type_specifier: enumeration_type_specifier .

    $default  reduce using rule 14 (type_specifier)


state 38

   92 enumeration_type_specifier: enumeration_type_definition .

    $default  reduce using rule 92 (enumeration_type_specifier)


state 39

   93 enumeration_type_specifier: enumeration_type_reference .

    $default  reduce using rule 93 (enumeration_type_specifier)


state 40

   17 type_specifier: structure_type_specifier .

    $default  reduce using rule 17 (type_specifier)


state 41

  105 structure_type_specifier: structure_type_definition .

    $default  reduce using rule 105 (structure_type_specifier)


state 42

  106 structure_type_specifier: structure_type_reference .

    $default  reduce using rule 106 (structure_type_specifier)


state 43

   19 type_specifier: union_type_specifier .

    $default  reduce using rule 19 (type_specifier)


state 44

  122 union_type_specifier: union_type_definition .

    $default  reduce using rule 122 (union_type_specifier)


state 45

  123 union_type_specifier: union_type_reference .

    $default  reduce using rule 123 (union_type_specifier)


state 46

   18 type_specifier: typedef_name .

    $default  reduce using rule 18 (type_specifier)


state 47

    0 $accept: translation_unit . $end
  279 translation_unit: translation_unit . top_level_declaration

    $end          shift, and go to state 92
    IDENT         shift, and go to state 1
    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 9
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22

    declaration                  go to state 23
    declaration_specifier        go to state 24
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46
    top_level_declaration        go to state 93
    function_definition          go to state 49
    function_specifier           go to state 50


state 48

  278 translation_unit: top_level_declaration .

    $default  reduce using rule 278 (translation_unit)


state 49

  281 top_level_declaration: function_definition .

    $default  reduce using rule 281 (top_level_declaration)


state 50

  282 function_definition: function_specifier . compound_statement

    '{'  shift, and go to state 94

    compound_statement  go to state 95


state 51

  283 function_specifier: IDENT '(' . ')'

    ')'  shift, and go to state 96


state 52

   88 complex_type_specifier: DOUBLE _COMPLEX .

    $default  reduce using rule 88 (complex_type_specifier)


state 53

   99 enumeration_tag: IDENT .

    $default  reduce using rule 99 (enumeration_tag)


state 54

   94 enumeration_type_definition: ENUM '{' . enumeration_definition_list '}'
   96                            | ENUM '{' . enumeration_definition_list ',' '}'

    IDENT  shift, and go to state 97

    enumeration_definition_list      go to state 98
    enumeration_constant_definition  go to state 99
    enumeration_constant             go to state 100


state 55

   95 enumeration_type_definition: ENUM enumeration_tag . '{' enumeration_definition_list '}'
   97                            | ENUM enumeration_tag . '{' enumeration_definition_list ',' '}'
   98 enumeration_type_reference: ENUM enumeration_tag .

    '{'  shift, and go to state 101

    $default  reduce using rule 98 (enumeration_type_reference)


state 56

   87 complex_type_specifier: FLOAT _COMPLEX .

    $default  reduce using rule 87 (complex_type_specifier)


state 57

   51 identifier_list: IDENT .

    $default  reduce using rule 51 (identifier_list)


state 58

    1 declaration: INT identifier_list . ';'
   52 identifier_list: identifier_list . ',' IDENT

    ';'  shift, and go to state 102
    ','  shift, and go to state 103


state 59

   85 floating_point_specifier: LONG DOUBLE .
   89 complex_type_specifier: LONG DOUBLE . _COMPLEX

    _COMPLEX  shift, and go to state 104

    $default  reduce using rule 85 (floating_point_specifier)


state 60

   73 signed_type_specifier: LONG INT .

    $default  reduce using rule 73 (signed_type_specifier)


state 61

   76 signed_type_specifier: LONG LONG .
   77                      | LONG LONG . INT

    INT  shift, and go to state 105

    INT       [reduce using rule 76 (signed_type_specifier)]
    $default  reduce using rule 76 (signed_type_specifier)


state 62

   66 signed_type_specifier: SHORT INT .

    $default  reduce using rule 66 (signed_type_specifier)


state 63

   81 character_type_specifier: SIGNED CHAR .

    $default  reduce using rule 81 (character_type_specifier)


state 64

   70 signed_type_specifier: SIGNED INT .

    $default  reduce using rule 70 (signed_type_specifier)


state 65

   74 signed_type_specifier: SIGNED LONG .
   75                      | SIGNED LONG . INT
   78                      | SIGNED LONG . LONG
   79                      | SIGNED LONG . LONG INT

    INT   shift, and go to state 106
    LONG  shift, and go to state 107

    INT       [reduce using rule 74 (signed_type_specifier)]
    LONG      [reduce using rule 74 (signed_type_specifier)]
    $default  reduce using rule 74 (signed_type_specifier)


state 66

   67 signed_type_specifier: SIGNED SHORT .
   68                      | SIGNED SHORT . INT

    INT  shift, and go to state 108

    INT       [reduce using rule 67 (signed_type_specifier)]
    $default  reduce using rule 67 (signed_type_specifier)


state 67

  110 structure_tag: IDENT .

    $default  reduce using rule 110 (structure_tag)


state 68

  107 structure_type_definition: STRUCT '{' . field_list '}'

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    field_list                   go to state 110
    component_declaration        go to state 111
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 69

  108 structure_type_definition: STRUCT structure_tag . '{' field_list '}'
  109 structure_type_reference: STRUCT structure_tag .

    '{'  shift, and go to state 112

    $default  reduce using rule 109 (structure_type_reference)


state 70

  127 union_tag: IDENT .

    $default  reduce using rule 127 (union_tag)


state 71

  124 union_type_definition: UNION '{' . field_list '}'

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    field_list                   go to state 113
    component_declaration        go to state 111
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 72

  125 union_type_definition: UNION union_tag . '{' field_list '}'
  126 union_type_reference: UNION union_tag .

    '{'  shift, and go to state 114

    $default  reduce using rule 126 (union_type_reference)


state 73

   82 character_type_specifier: UNSIGNED CHAR .

    $default  reduce using rule 82 (character_type_specifier)


state 74

   60 unsigned_type_specifier: UNSIGNED INT .

    $default  reduce using rule 60 (unsigned_type_specifier)


state 75

   61 unsigned_type_specifier: UNSIGNED LONG .
   62                        | UNSIGNED LONG . INT
   63                        | UNSIGNED LONG . LONG
   64                        | UNSIGNED LONG . LONG INT

    INT   shift, and go to state 115
    LONG  shift, and go to state 116

    INT       [reduce using rule 61 (unsigned_type_specifier)]
    LONG      [reduce using rule 61 (unsigned_type_specifier)]
    $default  reduce using rule 61 (unsigned_type_specifier)


state 76

   57 unsigned_type_specifier: UNSIGNED SHORT .
   58                        | UNSIGNED SHORT . INT

    INT  shift, and go to state 117

    INT       [reduce using rule 57 (unsigned_type_specifier)]
    $default  reduce using rule 57 (unsigned_type_specifier)


state 77

   30 simple_declarator: IDENT .

    $default  reduce using rule 30 (simple_declarator)


state 78

   27 direct_declarator: '(' . declarator ')'

    IDENT  shift, and go to state 77
    '('    shift, and go to state 78
    '*'    shift, and go to state 79

    declarator           go to state 118
    direct_declarator    go to state 81
    simple_declarator    go to state 82
    pointer_declarator   go to state 83
    pointer              go to state 84
    array_declarator     go to state 85
    function_declarator  go to state 86


state 79

   32 pointer: '*' .
   33        | '*' . type_qualifier_list
   34        | '*' . type_qualifier_list pointer
   35        | '*' . pointer
  134        | '*' .
  135        | '*' . type_qualifier_list
  136        | '*' . type_qualifier_list pointer
  137        | '*' . pointer

    CONST     shift, and go to state 4
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 21
    '*'       shift, and go to state 79

    IDENT     reduce using rule 32 (pointer)
    IDENT     [reduce using rule 134 (pointer)]
    '('       reduce using rule 32 (pointer)
    '('       [reduce using rule 134 (pointer)]
    ')'       reduce using rule 32 (pointer)
    ')'       [reduce using rule 134 (pointer)]
    '['       reduce using rule 32 (pointer)
    '['       [reduce using rule 134 (pointer)]
    ','       reduce using rule 32 (pointer)
    ','       [reduce using rule 134 (pointer)]
    $default  reduce using rule 32 (pointer)

    type_qualifier       go to state 119
    pointer              go to state 120
    type_qualifier_list  go to state 121


state 80

  284 function_specifier: declaration_specifier declarator . declaration_list

    INT  shift, and go to state 122

    declaration       go to state 123
    declaration_list  go to state 124


state 81

   25 declarator: direct_declarator .
   38 array_declarator: direct_declarator . '[' ']'
   39                 | direct_declarator . '[' constant_expression ']'
   41 function_declarator: direct_declarator . '(' parameter_type_list ')'
   42                    | direct_declarator . '(' ')'
   43                    | direct_declarator . '(' identifier_list ')'

    '('  shift, and go to state 125
    '['  shift, and go to state 126

    $default  reduce using rule 25 (declarator)


state 82

   26 direct_declarator: simple_declarator .

    $default  reduce using rule 26 (direct_declarator)


state 83

   24 declarator: pointer_declarator .

    $default  reduce using rule 24 (declarator)


state 84

   31 pointer_declarator: pointer . direct_declarator

    IDENT  shift, and go to state 77
    '('    shift, and go to state 78

    direct_declarator    go to state 127
    simple_declarator    go to state 82
    array_declarator     go to state 85
    function_declarator  go to state 86


state 85

   29 direct_declarator: array_declarator .

    $default  reduce using rule 29 (direct_declarator)


state 86

   28 direct_declarator: function_declarator .

    $default  reduce using rule 28 (direct_declarator)


state 87

   69 signed_type_specifier: INT .

    $default  reduce using rule 69 (signed_type_specifier)


state 88

    3 declaration_specifier: storage_class_specifier declaration_specifier .

    $default  reduce using rule 3 (declaration_specifier)


state 89

    5 declaration_specifier: typedef_definition declaration_specifier .

    $default  reduce using rule 5 (declaration_specifier)


state 90

    7 declaration_specifier: type_specifier declaration_specifier .

    $default  reduce using rule 7 (declaration_specifier)


state 91

    9 declaration_specifier: type_qualifier declaration_specifier .

    $default  reduce using rule 9 (declaration_specifier)


state 92

    0 $accept: translation_unit $end .

    $default  accept


state 93

  279 translation_unit: translation_unit top_level_declaration .

    $default  reduce using rule 279 (translation_unit)


state 94

  242 compound_statement: '{' . '}'
  244                   | '{' . $@1 declaration_or_statement_list '}'

    '}'  shift, and go to state 128

    $default  reduce using rule 243 ($@1)

    $@1  go to state 129


state 95

  282 function_definition: function_specifier compound_statement .

    $default  reduce using rule 282 (function_definition)


state 96

  283 function_specifier: IDENT '(' ')' .

    $default  reduce using rule 283 (function_specifier)


state 97

  104 enumeration_constant: IDENT .

    $default  reduce using rule 104 (enumeration_constant)


state 98

   94 enumeration_type_definition: ENUM '{' enumeration_definition_list . '}'
   96                            | ENUM '{' enumeration_definition_list . ',' '}'
  101 enumeration_definition_list: enumeration_definition_list . ',' enumeration_constant_definition

    ','  shift, and go to state 130
    '}'  shift, and go to state 131


state 99

  100 enumeration_definition_list: enumeration_constant_definition .

    $default  reduce using rule 100 (enumeration_definition_list)


state 100

  102 enumeration_constant_definition: enumeration_constant .
  103                                | enumeration_constant . '=' expression

    '='  shift, and go to state 132

    $default  reduce using rule 102 (enumeration_constant_definition)


state 101

   95 enumeration_type_definition: ENUM enumeration_tag '{' . enumeration_definition_list '}'
   97                            | ENUM enumeration_tag '{' . enumeration_definition_list ',' '}'

    IDENT  shift, and go to state 97

    enumeration_definition_list      go to state 133
    enumeration_constant_definition  go to state 99
    enumeration_constant             go to state 100


state 102

    1 declaration: INT identifier_list ';' .

    $default  reduce using rule 1 (declaration)


state 103

   52 identifier_list: identifier_list ',' . IDENT

    IDENT  shift, and go to state 134


state 104

   89 complex_type_specifier: LONG DOUBLE _COMPLEX .

    $default  reduce using rule 89 (complex_type_specifier)


state 105

   77 signed_type_specifier: LONG LONG INT .

    $default  reduce using rule 77 (signed_type_specifier)


state 106

   75 signed_type_specifier: SIGNED LONG INT .

    $default  reduce using rule 75 (signed_type_specifier)


state 107

   78 signed_type_specifier: SIGNED LONG LONG .
   79                      | SIGNED LONG LONG . INT

    INT  shift, and go to state 135

    INT       [reduce using rule 78 (signed_type_specifier)]
    $default  reduce using rule 78 (signed_type_specifier)


state 108

   68 signed_type_specifier: SIGNED SHORT INT .

    $default  reduce using rule 68 (signed_type_specifier)


state 109

  113 component_declaration: type_specifier . component_declaration_list ';'

    IDENT  shift, and go to state 77
    '('    shift, and go to state 78
    '*'    shift, and go to state 79
    ':'    shift, and go to state 136

    declarator                  go to state 137
    direct_declarator           go to state 81
    simple_declarator           go to state 82
    pointer_declarator          go to state 83
    pointer                     go to state 84
    array_declarator            go to state 85
    function_declarator         go to state 86
    component_declaration_list  go to state 138
    component_declarator        go to state 139
    simple_component            go to state 140
    bit_field                   go to state 141


state 110

  107 structure_type_definition: STRUCT '{' field_list . '}'
  112 field_list: field_list . component_declaration

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22
    '}'           shift, and go to state 142

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    component_declaration        go to state 143
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 111

  111 field_list: component_declaration .

    $default  reduce using rule 111 (field_list)


state 112

  108 structure_type_definition: STRUCT structure_tag '{' . field_list '}'

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    field_list                   go to state 144
    component_declaration        go to state 111
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 113

  112 field_list: field_list . component_declaration
  124 union_type_definition: UNION '{' field_list . '}'

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22
    '}'           shift, and go to state 145

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    component_declaration        go to state 143
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 114

  125 union_type_definition: UNION union_tag '{' . field_list '}'

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    field_list                   go to state 146
    component_declaration        go to state 111
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 115

   62 unsigned_type_specifier: UNSIGNED LONG INT .

    $default  reduce using rule 62 (unsigned_type_specifier)


state 116

   63 unsigned_type_specifier: UNSIGNED LONG LONG .
   64                        | UNSIGNED LONG LONG . INT

    INT  shift, and go to state 147

    INT       [reduce using rule 63 (unsigned_type_specifier)]
    $default  reduce using rule 63 (unsigned_type_specifier)


state 117

   58 unsigned_type_specifier: UNSIGNED SHORT INT .

    $default  reduce using rule 58 (unsigned_type_specifier)


state 118

   27 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 148


state 119

   36 type_qualifier_list: type_qualifier .

    $default  reduce using rule 36 (type_qualifier_list)


state 120

   35 pointer: '*' pointer .
  137        | '*' pointer .

    IDENT     reduce using rule 35 (pointer)
    IDENT     [reduce using rule 137 (pointer)]
    '('       reduce using rule 35 (pointer)
    '('       [reduce using rule 137 (pointer)]
    ')'       reduce using rule 35 (pointer)
    ')'       [reduce using rule 137 (pointer)]
    '['       reduce using rule 35 (pointer)
    '['       [reduce using rule 137 (pointer)]
    ','       reduce using rule 35 (pointer)
    ','       [reduce using rule 137 (pointer)]
    $default  reduce using rule 35 (pointer)


state 121

   33 pointer: '*' type_qualifier_list .
   34        | '*' type_qualifier_list . pointer
   37 type_qualifier_list: type_qualifier_list . type_qualifier
  135 pointer: '*' type_qualifier_list .
  136        | '*' type_qualifier_list . pointer

    CONST     shift, and go to state 4
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 21
    '*'       shift, and go to state 79

    IDENT     reduce using rule 33 (pointer)
    IDENT     [reduce using rule 135 (pointer)]
    '('       reduce using rule 33 (pointer)
    '('       [reduce using rule 135 (pointer)]
    ')'       reduce using rule 33 (pointer)
    ')'       [reduce using rule 135 (pointer)]
    '['       reduce using rule 33 (pointer)
    '['       [reduce using rule 135 (pointer)]
    ','       reduce using rule 33 (pointer)
    ','       [reduce using rule 135 (pointer)]
    $default  reduce using rule 33 (pointer)

    type_qualifier  go to state 149
    pointer         go to state 150


state 122

    1 declaration: INT . identifier_list ';'

    IDENT  shift, and go to state 57

    identifier_list  go to state 58


state 123

  285 declaration_list: declaration .

    $default  reduce using rule 285 (declaration_list)


state 124

  284 function_specifier: declaration_specifier declarator declaration_list .
  286 declaration_list: declaration_list . declaration

    INT  shift, and go to state 122

    $default  reduce using rule 284 (function_specifier)

    declaration  go to state 151


state 125

   41 function_declarator: direct_declarator '(' . parameter_type_list ')'
   42                    | direct_declarator '(' . ')'
   43                    | direct_declarator '(' . identifier_list ')'

    IDENT         shift, and go to state 57
    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22
    ')'           shift, and go to state 152

    declaration_specifier        go to state 153
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    parameter_type_list          go to state 154
    parameter_list               go to state 155
    parameter_declaration        go to state 156
    identifier_list              go to state 157
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 126

   38 array_declarator: direct_declarator '[' . ']'
   39                 | direct_declarator '[' . constant_expression ']'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    ']'         shift, and go to state 165
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    constant_expression        go to state 171
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 187


state 127

   31 pointer_declarator: pointer direct_declarator .
   38 array_declarator: direct_declarator . '[' ']'
   39                 | direct_declarator . '[' constant_expression ']'
   41 function_declarator: direct_declarator . '(' parameter_type_list ')'
   42                    | direct_declarator . '(' ')'
   43                    | direct_declarator . '(' identifier_list ')'

    '('  shift, and go to state 125
    '['  shift, and go to state 126

    $default  reduce using rule 31 (pointer_declarator)


state 128

  242 compound_statement: '{' '}' .

    $default  reduce using rule 242 (compound_statement)


state 129

  244 compound_statement: '{' $@1 . declaration_or_statement_list '}'

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    INT         shift, and go to state 122
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    declaration                    go to state 201
    primary_expression             go to state 172
    postfix_expression             go to state 173
    function_call                  go to state 174
    cast_expression                go to state 175
    unary_expression               go to state 202
    multiplicative_expression      go to state 177
    additive_expression            go to state 178
    shift_expression               go to state 179
    relational_expression          go to state 180
    equality_expression            go to state 181
    bit_or_expression              go to state 182
    bit_xor_expression             go to state 183
    bit_and_expression             go to state 184
    logical_or_expression          go to state 185
    logical_and_expression         go to state 186
    conditional_expression         go to state 203
    assignment_expression          go to state 204
    expression                     go to state 205
    statement                      go to state 206
    conditional_statement          go to state 207
    iterative_statement            go to state 208
    labeled_statement              go to state 209
    label                          go to state 210
    compound_statement             go to state 211
    declaration_or_statement_list  go to state 212
    declaration_or_statement       go to state 213
    if_statement                   go to state 214
    if_else_statement              go to state 215
    do_statement                   go to state 216
    while_statement                go to state 217
    for_statement                  go to state 218
    switch_statement               go to state 219
    case_label                     go to state 220
    default_label                  go to state 221
    break_statement                go to state 222
    continue_statement             go to state 223
    return_statement               go to state 224
    goto_statement                 go to state 225
    named_label                    go to state 226
    null_statement                 go to state 227


state 130

   96 enumeration_type_definition: ENUM '{' enumeration_definition_list ',' . '}'
  101 enumeration_definition_list: enumeration_definition_list ',' . enumeration_constant_definition

    IDENT  shift, and go to state 97
    '}'    shift, and go to state 228

    enumeration_constant_definition  go to state 229
    enumeration_constant             go to state 100


state 131

   94 enumeration_type_definition: ENUM '{' enumeration_definition_list '}' .

    $default  reduce using rule 94 (enumeration_type_definition)


state 132

  103 enumeration_constant_definition: enumeration_constant '=' . expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 230


state 133

   95 enumeration_type_definition: ENUM enumeration_tag '{' enumeration_definition_list . '}'
   97                            | ENUM enumeration_tag '{' enumeration_definition_list . ',' '}'
  101 enumeration_definition_list: enumeration_definition_list . ',' enumeration_constant_definition

    ','  shift, and go to state 231
    '}'  shift, and go to state 232


state 134

   52 identifier_list: identifier_list ',' IDENT .

    $default  reduce using rule 52 (identifier_list)


state 135

   79 signed_type_specifier: SIGNED LONG LONG INT .

    $default  reduce using rule 79 (signed_type_specifier)


state 136

  119 bit_field: ':' . width

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    constant_expression        go to state 233
    width                      go to state 234
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 187


state 137

  118 simple_component: declarator .
  120 bit_field: declarator . ':' width

    ':'  shift, and go to state 235

    $default  reduce using rule 118 (simple_component)


state 138

  113 component_declaration: type_specifier component_declaration_list . ';'
  115 component_declaration_list: component_declaration_list . ',' component_declarator

    ';'  shift, and go to state 236
    ','  shift, and go to state 237


state 139

  114 component_declaration_list: component_declarator .

    $default  reduce using rule 114 (component_declaration_list)


state 140

  116 component_declarator: simple_component .

    $default  reduce using rule 116 (component_declarator)


state 141

  117 component_declarator: bit_field .

    $default  reduce using rule 117 (component_declarator)


state 142

  107 structure_type_definition: STRUCT '{' field_list '}' .

    $default  reduce using rule 107 (structure_type_definition)


state 143

  112 field_list: field_list component_declaration .

    $default  reduce using rule 112 (field_list)


state 144

  108 structure_type_definition: STRUCT structure_tag '{' field_list . '}'
  112 field_list: field_list . component_declaration

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22
    '}'           shift, and go to state 238

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    component_declaration        go to state 143
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 145

  124 union_type_definition: UNION '{' field_list '}' .

    $default  reduce using rule 124 (union_type_definition)


state 146

  112 field_list: field_list . component_declaration
  125 union_type_definition: UNION union_tag '{' field_list . '}'

    CHAR          shift, and go to state 3
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STRUCT        shift, and go to state 15
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    _BOOL         shift, and go to state 22
    '}'           shift, and go to state 239

    type_specifier               go to state 109
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    component_declaration        go to state 143
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 147

   64 unsigned_type_specifier: UNSIGNED LONG LONG INT .

    $default  reduce using rule 64 (unsigned_type_specifier)


state 148

   27 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 27 (direct_declarator)


state 149

   37 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 37 (type_qualifier_list)


state 150

   34 pointer: '*' type_qualifier_list pointer .
  136        | '*' type_qualifier_list pointer .

    IDENT     reduce using rule 34 (pointer)
    IDENT     [reduce using rule 136 (pointer)]
    '('       reduce using rule 34 (pointer)
    '('       [reduce using rule 136 (pointer)]
    ')'       reduce using rule 34 (pointer)
    ')'       [reduce using rule 136 (pointer)]
    '['       reduce using rule 34 (pointer)
    '['       [reduce using rule 136 (pointer)]
    ','       reduce using rule 34 (pointer)
    ','       [reduce using rule 136 (pointer)]
    $default  reduce using rule 34 (pointer)


state 151

  286 declaration_list: declaration_list declaration .

    $default  reduce using rule 286 (declaration_list)


state 152

   42 function_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 42 (function_declarator)


state 153

   48 parameter_declaration: declaration_specifier . declarator
   49                      | declaration_specifier .
   50                      | declaration_specifier . abstract_declarator

    IDENT  shift, and go to state 77
    '('    shift, and go to state 240
    '*'    shift, and go to state 79
    '['    shift, and go to state 241

    $default  reduce using rule 49 (parameter_declaration)

    declarator                  go to state 242
    direct_declarator           go to state 81
    simple_declarator           go to state 82
    pointer_declarator          go to state 83
    pointer                     go to state 243
    array_declarator            go to state 85
    function_declarator         go to state 86
    abstract_declarator         go to state 244
    direct_abstract_declarator  go to state 245


state 154

   41 function_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 246


state 155

   44 parameter_type_list: parameter_list .
   45                    | parameter_list . ',' ELLIPSIS
   47 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 247

    $default  reduce using rule 44 (parameter_type_list)


state 156

   46 parameter_list: parameter_declaration .

    $default  reduce using rule 46 (parameter_list)


state 157

   43 function_declarator: direct_declarator '(' identifier_list . ')'
   52 identifier_list: identifier_list . ',' IDENT

    ')'  shift, and go to state 248
    ','  shift, and go to state 103


state 158

  151 primary_expression: IDENT .

    $default  reduce using rule 151 (primary_expression)


state 159

  152 primary_expression: NUMBER .

    $default  reduce using rule 152 (primary_expression)


state 160

  176 unary_expression: PLUSPLUS . unary_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 249
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    unary_expression    go to state 250


state 161

  177 unary_expression: MINUSMINUS . unary_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 249
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    unary_expression    go to state 251


state 162

  168 unary_expression: SIZEOF . '(' type_name ')'
  169                 | SIZEOF . '(' unary_expression ')'

    '('  shift, and go to state 252


state 163

  153 primary_expression: '(' . expression ')'
  166 cast_expression: '(' . INT ')' cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    INT         shift, and go to state 253
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 254


state 164

  175 unary_expression: '*' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 255
    unary_expression    go to state 176


state 165

   38 array_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 38 (array_declarator)


state 166

  170 unary_expression: '-' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 256
    unary_expression    go to state 176


state 167

  171 unary_expression: '+' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 257
    unary_expression    go to state 176


state 168

  172 unary_expression: '!' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 258
    unary_expression    go to state 176


state 169

  173 unary_expression: '~' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 259
    unary_expression    go to state 176


state 170

  174 unary_expression: '&' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 260
    unary_expression    go to state 176


state 171

   39 array_declarator: direct_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 261


state 172

  154 postfix_expression: primary_expression .

    $default  reduce using rule 154 (postfix_expression)


state 173

  155 postfix_expression: postfix_expression . '[' expression ']'
  156                   | postfix_expression . '.' IDENT
  157                   | postfix_expression . INDSEL IDENT
  159                   | postfix_expression . PLUSPLUS
  160                   | postfix_expression . MINUSMINUS
  161 function_call: postfix_expression . '(' ')'
  162              | postfix_expression . '(' expression_list ')'
  167 unary_expression: postfix_expression .

    INDSEL      shift, and go to state 262
    PLUSPLUS    shift, and go to state 263
    MINUSMINUS  shift, and go to state 264
    '('         shift, and go to state 265
    '['         shift, and go to state 266
    '.'         shift, and go to state 267

    $default  reduce using rule 167 (unary_expression)


state 174

  158 postfix_expression: function_call .

    $default  reduce using rule 158 (postfix_expression)


state 175

  178 multiplicative_expression: cast_expression .

    $default  reduce using rule 178 (multiplicative_expression)


state 176

  165 cast_expression: unary_expression .

    $default  reduce using rule 165 (cast_expression)


state 177

  179 multiplicative_expression: multiplicative_expression . '*' cast_expression
  180                          | multiplicative_expression . '/' cast_expression
  181                          | multiplicative_expression . '%' cast_expression
  182 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 268
    '/'  shift, and go to state 269
    '%'  shift, and go to state 270

    $default  reduce using rule 182 (additive_expression)


state 178

  183 additive_expression: additive_expression . '+' multiplicative_expression
  184                    | additive_expression . '-' multiplicative_expression
  185 shift_expression: additive_expression .

    '-'  shift, and go to state 271
    '+'  shift, and go to state 272

    $default  reduce using rule 185 (shift_expression)


state 179

  186 shift_expression: shift_expression . SHL additive_expression
  187                 | shift_expression . SHR additive_expression
  188 relational_expression: shift_expression .

    SHL  shift, and go to state 273
    SHR  shift, and go to state 274

    $default  reduce using rule 188 (relational_expression)


state 180

  189 relational_expression: relational_expression . '<' shift_expression
  190                      | relational_expression . LTEQ shift_expression
  191                      | relational_expression . '>' shift_expression
  192                      | relational_expression . GTEQ shift_expression
  193 equality_expression: relational_expression .

    LTEQ  shift, and go to state 275
    GTEQ  shift, and go to state 276
    '<'   shift, and go to state 277
    '>'   shift, and go to state 278

    $default  reduce using rule 193 (equality_expression)


state 181

  194 equality_expression: equality_expression . EQEQ relational_expression
  195                    | equality_expression . NOTEQ relational_expression
  200 bit_and_expression: equality_expression .

    EQEQ   shift, and go to state 279
    NOTEQ  shift, and go to state 280

    $default  reduce using rule 200 (bit_and_expression)


state 182

  197 bit_or_expression: bit_or_expression . '|' bit_xor_expression
  204 logical_and_expression: bit_or_expression .

    '|'  shift, and go to state 281

    $default  reduce using rule 204 (logical_and_expression)


state 183

  196 bit_or_expression: bit_xor_expression .
  199 bit_xor_expression: bit_xor_expression . '^' bit_and_expression

    '^'  shift, and go to state 282

    $default  reduce using rule 196 (bit_or_expression)


state 184

  198 bit_xor_expression: bit_and_expression .
  201 bit_and_expression: bit_and_expression . '&' equality_expression

    '&'  shift, and go to state 283

    $default  reduce using rule 198 (bit_xor_expression)


state 185

  203 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
  206 conditional_expression: logical_or_expression .
  207                       | logical_or_expression . '?' expression ':' conditional_expression

    LOGOR  shift, and go to state 284
    '?'    shift, and go to state 285

    $default  reduce using rule 206 (conditional_expression)


state 186

  202 logical_or_expression: logical_and_expression .
  205 logical_and_expression: logical_and_expression . LOGAND bit_or_expression

    LOGAND  shift, and go to state 286

    $default  reduce using rule 202 (logical_or_expression)


state 187

   40 constant_expression: conditional_expression .

    $default  reduce using rule 40 (constant_expression)


state 188

  151 primary_expression: IDENT .
  276 named_label: IDENT .

    ':'       reduce using rule 276 (named_label)
    $default  reduce using rule 151 (primary_expression)


state 189

  271 break_statement: BREAK . ';'

    ';'  shift, and go to state 287


state 190

  269 case_label: CASE . constant_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    constant_expression        go to state 288
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 187


state 191

  272 continue_statement: CONTINUE . ';'

    ';'  shift, and go to state 289


state 192

  270 default_label: DEFAULT .

    $default  reduce using rule 270 (default_label)


state 193

  256 do_statement: DO . statement WHILE '(' expression ')' ';'

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 290
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 194

  258 for_statement: FOR . for_expression statement

    '('  shift, and go to state 291

    for_expression  go to state 292


state 195

  275 goto_statement: GOTO . named_label ';'

    IDENT  shift, and go to state 293

    named_label  go to state 294


state 196

  251 if_statement: IF . '(' expression ')' statement
  252 if_else_statement: IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 295


state 197

  273 return_statement: RETURN . ';'
  274                 | RETURN . expression ';'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    ';'         shift, and go to state 296
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 297


state 198

  268 switch_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 298


state 199

  257 while_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 299


state 200

  277 null_statement: ';' .

    $default  reduce using rule 277 (null_statement)


state 201

  247 declaration_or_statement: declaration .

    $default  reduce using rule 247 (declaration_or_statement)


state 202

  165 cast_expression: unary_expression .
  209 assignment_expression: unary_expression . '=' assignment_expression
  210                      | unary_expression . PLUSEQ assignment_expression
  211                      | unary_expression . MINUSEQ assignment_expression
  212                      | unary_expression . TIMESEQ assignment_expression
  213                      | unary_expression . DIVEQ assignment_expression
  214                      | unary_expression . MODEQ assignment_expression
  215                      | unary_expression . SHLEQ assignment_expression
  216                      | unary_expression . SHREQ assignment_expression
  217                      | unary_expression . ANDEQ assignment_expression
  218                      | unary_expression . OREQ assignment_expression
  219                      | unary_expression . XOREQ assignment_expression

    TIMESEQ  shift, and go to state 300
    DIVEQ    shift, and go to state 301
    MODEQ    shift, and go to state 302
    PLUSEQ   shift, and go to state 303
    MINUSEQ  shift, and go to state 304
    SHLEQ    shift, and go to state 305
    SHREQ    shift, and go to state 306
    ANDEQ    shift, and go to state 307
    OREQ     shift, and go to state 308
    XOREQ    shift, and go to state 309
    '='      shift, and go to state 310

    $default  reduce using rule 165 (cast_expression)


state 203

  208 assignment_expression: conditional_expression .

    $default  reduce using rule 208 (assignment_expression)


state 204

  220 expression: assignment_expression .

    $default  reduce using rule 220 (expression)


state 205

  221 expression: expression . ',' assignment_expression
  222 statement: expression . ';'

    ';'  shift, and go to state 311
    ','  shift, and go to state 312


state 206

  248 declaration_or_statement: statement .

    $default  reduce using rule 248 (declaration_or_statement)


state 207

  225 statement: conditional_statement .

    $default  reduce using rule 225 (statement)


state 208

  226 statement: iterative_statement .

    $default  reduce using rule 226 (statement)


state 209

  223 statement: labeled_statement .

    $default  reduce using rule 223 (statement)


state 210

  238 labeled_statement: label . ':' statement

    ':'  shift, and go to state 313


state 211

  224 statement: compound_statement .

    $default  reduce using rule 224 (statement)


state 212

  244 compound_statement: '{' $@1 declaration_or_statement_list . '}'
  246 declaration_or_statement_list: declaration_or_statement_list . declaration_or_statement

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    INT         shift, and go to state 122
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '}'         shift, and go to state 314
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    declaration                go to state 201
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 206
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    declaration_or_statement   go to state 315
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 213

  245 declaration_or_statement_list: declaration_or_statement .

    $default  reduce using rule 245 (declaration_or_statement_list)


state 214

  233 conditional_statement: if_statement .
  249                      | if_statement .

    IDENT       reduce using rule 233 (conditional_statement)
    IDENT       [reduce using rule 249 (conditional_statement)]
    NUMBER      reduce using rule 233 (conditional_statement)
    NUMBER      [reduce using rule 249 (conditional_statement)]
    PLUSPLUS    reduce using rule 233 (conditional_statement)
    PLUSPLUS    [reduce using rule 249 (conditional_statement)]
    MINUSMINUS  reduce using rule 233 (conditional_statement)
    MINUSMINUS  [reduce using rule 249 (conditional_statement)]
    BREAK       reduce using rule 233 (conditional_statement)
    BREAK       [reduce using rule 249 (conditional_statement)]
    CASE        reduce using rule 233 (conditional_statement)
    CASE        [reduce using rule 249 (conditional_statement)]
    CONTINUE    reduce using rule 233 (conditional_statement)
    CONTINUE    [reduce using rule 249 (conditional_statement)]
    DEFAULT     reduce using rule 233 (conditional_statement)
    DEFAULT     [reduce using rule 249 (conditional_statement)]
    DO          reduce using rule 233 (conditional_statement)
    DO          [reduce using rule 249 (conditional_statement)]
    ELSE        reduce using rule 233 (conditional_statement)
    ELSE        [reduce using rule 249 (conditional_statement)]
    FOR         reduce using rule 233 (conditional_statement)
    FOR         [reduce using rule 249 (conditional_statement)]
    GOTO        reduce using rule 233 (conditional_statement)
    GOTO        [reduce using rule 249 (conditional_statement)]
    IF          reduce using rule 233 (conditional_statement)
    IF          [reduce using rule 249 (conditional_statement)]
    INT         reduce using rule 233 (conditional_statement)
    INT         [reduce using rule 249 (conditional_statement)]
    RETURN      reduce using rule 233 (conditional_statement)
    RETURN      [reduce using rule 249 (conditional_statement)]
    SIZEOF      reduce using rule 233 (conditional_statement)
    SIZEOF      [reduce using rule 249 (conditional_statement)]
    SWITCH      reduce using rule 233 (conditional_statement)
    SWITCH      [reduce using rule 249 (conditional_statement)]
    WHILE       reduce using rule 233 (conditional_statement)
    WHILE       [reduce using rule 249 (conditional_statement)]
    ';'         reduce using rule 233 (conditional_statement)
    ';'         [reduce using rule 249 (conditional_statement)]
    '('         reduce using rule 233 (conditional_statement)
    '('         [reduce using rule 249 (conditional_statement)]
    '*'         reduce using rule 233 (conditional_statement)
    '*'         [reduce using rule 249 (conditional_statement)]
    '{'         reduce using rule 233 (conditional_statement)
    '{'         [reduce using rule 249 (conditional_statement)]
    '}'         reduce using rule 233 (conditional_statement)
    '}'         [reduce using rule 249 (conditional_statement)]
    '-'         reduce using rule 233 (conditional_statement)
    '-'         [reduce using rule 249 (conditional_statement)]
    '+'         reduce using rule 233 (conditional_statement)
    '+'         [reduce using rule 249 (conditional_statement)]
    '!'         reduce using rule 233 (conditional_statement)
    '!'         [reduce using rule 249 (conditional_statement)]
    '~'         reduce using rule 233 (conditional_statement)
    '~'         [reduce using rule 249 (conditional_statement)]
    '&'         reduce using rule 233 (conditional_statement)
    '&'         [reduce using rule 249 (conditional_statement)]
    $default    reduce using rule 233 (conditional_statement)


state 215

  234 conditional_statement: if_else_statement .
  250                      | if_else_statement .

    IDENT       reduce using rule 234 (conditional_statement)
    IDENT       [reduce using rule 250 (conditional_statement)]
    NUMBER      reduce using rule 234 (conditional_statement)
    NUMBER      [reduce using rule 250 (conditional_statement)]
    PLUSPLUS    reduce using rule 234 (conditional_statement)
    PLUSPLUS    [reduce using rule 250 (conditional_statement)]
    MINUSMINUS  reduce using rule 234 (conditional_statement)
    MINUSMINUS  [reduce using rule 250 (conditional_statement)]
    BREAK       reduce using rule 234 (conditional_statement)
    BREAK       [reduce using rule 250 (conditional_statement)]
    CASE        reduce using rule 234 (conditional_statement)
    CASE        [reduce using rule 250 (conditional_statement)]
    CONTINUE    reduce using rule 234 (conditional_statement)
    CONTINUE    [reduce using rule 250 (conditional_statement)]
    DEFAULT     reduce using rule 234 (conditional_statement)
    DEFAULT     [reduce using rule 250 (conditional_statement)]
    DO          reduce using rule 234 (conditional_statement)
    DO          [reduce using rule 250 (conditional_statement)]
    ELSE        reduce using rule 234 (conditional_statement)
    ELSE        [reduce using rule 250 (conditional_statement)]
    FOR         reduce using rule 234 (conditional_statement)
    FOR         [reduce using rule 250 (conditional_statement)]
    GOTO        reduce using rule 234 (conditional_statement)
    GOTO        [reduce using rule 250 (conditional_statement)]
    IF          reduce using rule 234 (conditional_statement)
    IF          [reduce using rule 250 (conditional_statement)]
    INT         reduce using rule 234 (conditional_statement)
    INT         [reduce using rule 250 (conditional_statement)]
    RETURN      reduce using rule 234 (conditional_statement)
    RETURN      [reduce using rule 250 (conditional_statement)]
    SIZEOF      reduce using rule 234 (conditional_statement)
    SIZEOF      [reduce using rule 250 (conditional_statement)]
    SWITCH      reduce using rule 234 (conditional_statement)
    SWITCH      [reduce using rule 250 (conditional_statement)]
    WHILE       reduce using rule 234 (conditional_statement)
    WHILE       [reduce using rule 250 (conditional_statement)]
    ';'         reduce using rule 234 (conditional_statement)
    ';'         [reduce using rule 250 (conditional_statement)]
    '('         reduce using rule 234 (conditional_statement)
    '('         [reduce using rule 250 (conditional_statement)]
    '*'         reduce using rule 234 (conditional_statement)
    '*'         [reduce using rule 250 (conditional_statement)]
    '{'         reduce using rule 234 (conditional_statement)
    '{'         [reduce using rule 250 (conditional_statement)]
    '}'         reduce using rule 234 (conditional_statement)
    '}'         [reduce using rule 250 (conditional_statement)]
    '-'         reduce using rule 234 (conditional_statement)
    '-'         [reduce using rule 250 (conditional_statement)]
    '+'         reduce using rule 234 (conditional_statement)
    '+'         [reduce using rule 250 (conditional_statement)]
    '!'         reduce using rule 234 (conditional_statement)
    '!'         [reduce using rule 250 (conditional_statement)]
    '~'         reduce using rule 234 (conditional_statement)
    '~'         [reduce using rule 250 (conditional_statement)]
    '&'         reduce using rule 234 (conditional_statement)
    '&'         [reduce using rule 250 (conditional_statement)]
    $default    reduce using rule 234 (conditional_statement)


state 216

  235 iterative_statement: do_statement .
  253                    | do_statement .

    IDENT       reduce using rule 235 (iterative_statement)
    IDENT       [reduce using rule 253 (iterative_statement)]
    NUMBER      reduce using rule 235 (iterative_statement)
    NUMBER      [reduce using rule 253 (iterative_statement)]
    PLUSPLUS    reduce using rule 235 (iterative_statement)
    PLUSPLUS    [reduce using rule 253 (iterative_statement)]
    MINUSMINUS  reduce using rule 235 (iterative_statement)
    MINUSMINUS  [reduce using rule 253 (iterative_statement)]
    BREAK       reduce using rule 235 (iterative_statement)
    BREAK       [reduce using rule 253 (iterative_statement)]
    CASE        reduce using rule 235 (iterative_statement)
    CASE        [reduce using rule 253 (iterative_statement)]
    CONTINUE    reduce using rule 235 (iterative_statement)
    CONTINUE    [reduce using rule 253 (iterative_statement)]
    DEFAULT     reduce using rule 235 (iterative_statement)
    DEFAULT     [reduce using rule 253 (iterative_statement)]
    DO          reduce using rule 235 (iterative_statement)
    DO          [reduce using rule 253 (iterative_statement)]
    ELSE        reduce using rule 235 (iterative_statement)
    ELSE        [reduce using rule 253 (iterative_statement)]
    FOR         reduce using rule 235 (iterative_statement)
    FOR         [reduce using rule 253 (iterative_statement)]
    GOTO        reduce using rule 235 (iterative_statement)
    GOTO        [reduce using rule 253 (iterative_statement)]
    IF          reduce using rule 235 (iterative_statement)
    IF          [reduce using rule 253 (iterative_statement)]
    INT         reduce using rule 235 (iterative_statement)
    INT         [reduce using rule 253 (iterative_statement)]
    RETURN      reduce using rule 235 (iterative_statement)
    RETURN      [reduce using rule 253 (iterative_statement)]
    SIZEOF      reduce using rule 235 (iterative_statement)
    SIZEOF      [reduce using rule 253 (iterative_statement)]
    SWITCH      reduce using rule 235 (iterative_statement)
    SWITCH      [reduce using rule 253 (iterative_statement)]
    WHILE       reduce using rule 235 (iterative_statement)
    WHILE       [reduce using rule 253 (iterative_statement)]
    ';'         reduce using rule 235 (iterative_statement)
    ';'         [reduce using rule 253 (iterative_statement)]
    '('         reduce using rule 235 (iterative_statement)
    '('         [reduce using rule 253 (iterative_statement)]
    '*'         reduce using rule 235 (iterative_statement)
    '*'         [reduce using rule 253 (iterative_statement)]
    '{'         reduce using rule 235 (iterative_statement)
    '{'         [reduce using rule 253 (iterative_statement)]
    '}'         reduce using rule 235 (iterative_statement)
    '}'         [reduce using rule 253 (iterative_statement)]
    '-'         reduce using rule 235 (iterative_statement)
    '-'         [reduce using rule 253 (iterative_statement)]
    '+'         reduce using rule 235 (iterative_statement)
    '+'         [reduce using rule 253 (iterative_statement)]
    '!'         reduce using rule 235 (iterative_statement)
    '!'         [reduce using rule 253 (iterative_statement)]
    '~'         reduce using rule 235 (iterative_statement)
    '~'         [reduce using rule 253 (iterative_statement)]
    '&'         reduce using rule 235 (iterative_statement)
    '&'         [reduce using rule 253 (iterative_statement)]
    $default    reduce using rule 235 (iterative_statement)


state 217

  236 iterative_statement: while_statement .
  254                    | while_statement .

    IDENT       reduce using rule 236 (iterative_statement)
    IDENT       [reduce using rule 254 (iterative_statement)]
    NUMBER      reduce using rule 236 (iterative_statement)
    NUMBER      [reduce using rule 254 (iterative_statement)]
    PLUSPLUS    reduce using rule 236 (iterative_statement)
    PLUSPLUS    [reduce using rule 254 (iterative_statement)]
    MINUSMINUS  reduce using rule 236 (iterative_statement)
    MINUSMINUS  [reduce using rule 254 (iterative_statement)]
    BREAK       reduce using rule 236 (iterative_statement)
    BREAK       [reduce using rule 254 (iterative_statement)]
    CASE        reduce using rule 236 (iterative_statement)
    CASE        [reduce using rule 254 (iterative_statement)]
    CONTINUE    reduce using rule 236 (iterative_statement)
    CONTINUE    [reduce using rule 254 (iterative_statement)]
    DEFAULT     reduce using rule 236 (iterative_statement)
    DEFAULT     [reduce using rule 254 (iterative_statement)]
    DO          reduce using rule 236 (iterative_statement)
    DO          [reduce using rule 254 (iterative_statement)]
    ELSE        reduce using rule 236 (iterative_statement)
    ELSE        [reduce using rule 254 (iterative_statement)]
    FOR         reduce using rule 236 (iterative_statement)
    FOR         [reduce using rule 254 (iterative_statement)]
    GOTO        reduce using rule 236 (iterative_statement)
    GOTO        [reduce using rule 254 (iterative_statement)]
    IF          reduce using rule 236 (iterative_statement)
    IF          [reduce using rule 254 (iterative_statement)]
    INT         reduce using rule 236 (iterative_statement)
    INT         [reduce using rule 254 (iterative_statement)]
    RETURN      reduce using rule 236 (iterative_statement)
    RETURN      [reduce using rule 254 (iterative_statement)]
    SIZEOF      reduce using rule 236 (iterative_statement)
    SIZEOF      [reduce using rule 254 (iterative_statement)]
    SWITCH      reduce using rule 236 (iterative_statement)
    SWITCH      [reduce using rule 254 (iterative_statement)]
    WHILE       reduce using rule 236 (iterative_statement)
    WHILE       [reduce using rule 254 (iterative_statement)]
    ';'         reduce using rule 236 (iterative_statement)
    ';'         [reduce using rule 254 (iterative_statement)]
    '('         reduce using rule 236 (iterative_statement)
    '('         [reduce using rule 254 (iterative_statement)]
    '*'         reduce using rule 236 (iterative_statement)
    '*'         [reduce using rule 254 (iterative_statement)]
    '{'         reduce using rule 236 (iterative_statement)
    '{'         [reduce using rule 254 (iterative_statement)]
    '}'         reduce using rule 236 (iterative_statement)
    '}'         [reduce using rule 254 (iterative_statement)]
    '-'         reduce using rule 236 (iterative_statement)
    '-'         [reduce using rule 254 (iterative_statement)]
    '+'         reduce using rule 236 (iterative_statement)
    '+'         [reduce using rule 254 (iterative_statement)]
    '!'         reduce using rule 236 (iterative_statement)
    '!'         [reduce using rule 254 (iterative_statement)]
    '~'         reduce using rule 236 (iterative_statement)
    '~'         [reduce using rule 254 (iterative_statement)]
    '&'         reduce using rule 236 (iterative_statement)
    '&'         [reduce using rule 254 (iterative_statement)]
    $default    reduce using rule 236 (iterative_statement)


state 218

  237 iterative_statement: for_statement .
  255                    | for_statement .

    IDENT       reduce using rule 237 (iterative_statement)
    IDENT       [reduce using rule 255 (iterative_statement)]
    NUMBER      reduce using rule 237 (iterative_statement)
    NUMBER      [reduce using rule 255 (iterative_statement)]
    PLUSPLUS    reduce using rule 237 (iterative_statement)
    PLUSPLUS    [reduce using rule 255 (iterative_statement)]
    MINUSMINUS  reduce using rule 237 (iterative_statement)
    MINUSMINUS  [reduce using rule 255 (iterative_statement)]
    BREAK       reduce using rule 237 (iterative_statement)
    BREAK       [reduce using rule 255 (iterative_statement)]
    CASE        reduce using rule 237 (iterative_statement)
    CASE        [reduce using rule 255 (iterative_statement)]
    CONTINUE    reduce using rule 237 (iterative_statement)
    CONTINUE    [reduce using rule 255 (iterative_statement)]
    DEFAULT     reduce using rule 237 (iterative_statement)
    DEFAULT     [reduce using rule 255 (iterative_statement)]
    DO          reduce using rule 237 (iterative_statement)
    DO          [reduce using rule 255 (iterative_statement)]
    ELSE        reduce using rule 237 (iterative_statement)
    ELSE        [reduce using rule 255 (iterative_statement)]
    FOR         reduce using rule 237 (iterative_statement)
    FOR         [reduce using rule 255 (iterative_statement)]
    GOTO        reduce using rule 237 (iterative_statement)
    GOTO        [reduce using rule 255 (iterative_statement)]
    IF          reduce using rule 237 (iterative_statement)
    IF          [reduce using rule 255 (iterative_statement)]
    INT         reduce using rule 237 (iterative_statement)
    INT         [reduce using rule 255 (iterative_statement)]
    RETURN      reduce using rule 237 (iterative_statement)
    RETURN      [reduce using rule 255 (iterative_statement)]
    SIZEOF      reduce using rule 237 (iterative_statement)
    SIZEOF      [reduce using rule 255 (iterative_statement)]
    SWITCH      reduce using rule 237 (iterative_statement)
    SWITCH      [reduce using rule 255 (iterative_statement)]
    WHILE       reduce using rule 237 (iterative_statement)
    WHILE       [reduce using rule 255 (iterative_statement)]
    ';'         reduce using rule 237 (iterative_statement)
    ';'         [reduce using rule 255 (iterative_statement)]
    '('         reduce using rule 237 (iterative_statement)
    '('         [reduce using rule 255 (iterative_statement)]
    '*'         reduce using rule 237 (iterative_statement)
    '*'         [reduce using rule 255 (iterative_statement)]
    '{'         reduce using rule 237 (iterative_statement)
    '{'         [reduce using rule 255 (iterative_statement)]
    '}'         reduce using rule 237 (iterative_statement)
    '}'         [reduce using rule 255 (iterative_statement)]
    '-'         reduce using rule 237 (iterative_statement)
    '-'         [reduce using rule 255 (iterative_statement)]
    '+'         reduce using rule 237 (iterative_statement)
    '+'         [reduce using rule 255 (iterative_statement)]
    '!'         reduce using rule 237 (iterative_statement)
    '!'         [reduce using rule 255 (iterative_statement)]
    '~'         reduce using rule 237 (iterative_statement)
    '~'         [reduce using rule 255 (iterative_statement)]
    '&'         reduce using rule 237 (iterative_statement)
    '&'         [reduce using rule 255 (iterative_statement)]
    $default    reduce using rule 237 (iterative_statement)


state 219

  227 statement: switch_statement .

    $default  reduce using rule 227 (statement)


state 220

  240 label: case_label .

    $default  reduce using rule 240 (label)


state 221

  241 label: default_label .

    $default  reduce using rule 241 (label)


state 222

  228 statement: break_statement .

    $default  reduce using rule 228 (statement)


state 223

  229 statement: continue_statement .

    $default  reduce using rule 229 (statement)


state 224

  230 statement: return_statement .

    $default  reduce using rule 230 (statement)


state 225

  231 statement: goto_statement .

    $default  reduce using rule 231 (statement)


state 226

  239 label: named_label .

    $default  reduce using rule 239 (label)


state 227

  232 statement: null_statement .

    $default  reduce using rule 232 (statement)


state 228

   96 enumeration_type_definition: ENUM '{' enumeration_definition_list ',' '}' .

    $default  reduce using rule 96 (enumeration_type_definition)


state 229

  101 enumeration_definition_list: enumeration_definition_list ',' enumeration_constant_definition .

    $default  reduce using rule 101 (enumeration_definition_list)


state 230

  103 enumeration_constant_definition: enumeration_constant '=' expression .
  221 expression: expression . ',' assignment_expression

    ','  shift, and go to state 312

    ','       [reduce using rule 103 (enumeration_constant_definition)]
    $default  reduce using rule 103 (enumeration_constant_definition)


state 231

   97 enumeration_type_definition: ENUM enumeration_tag '{' enumeration_definition_list ',' . '}'
  101 enumeration_definition_list: enumeration_definition_list ',' . enumeration_constant_definition

    IDENT  shift, and go to state 97
    '}'    shift, and go to state 316

    enumeration_constant_definition  go to state 229
    enumeration_constant             go to state 100


state 232

   95 enumeration_type_definition: ENUM enumeration_tag '{' enumeration_definition_list '}' .

    $default  reduce using rule 95 (enumeration_type_definition)


state 233

  121 width: constant_expression .

    $default  reduce using rule 121 (width)


state 234

  119 bit_field: ':' width .

    $default  reduce using rule 119 (bit_field)


state 235

  120 bit_field: declarator ':' . width

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    constant_expression        go to state 233
    width                      go to state 317
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 187


state 236

  113 component_declaration: type_specifier component_declaration_list ';' .

    $default  reduce using rule 113 (component_declaration)


state 237

  115 component_declaration_list: component_declaration_list ',' . component_declarator

    IDENT  shift, and go to state 77
    '('    shift, and go to state 78
    '*'    shift, and go to state 79
    ':'    shift, and go to state 136

    declarator            go to state 137
    direct_declarator     go to state 81
    simple_declarator     go to state 82
    pointer_declarator    go to state 83
    pointer               go to state 84
    array_declarator      go to state 85
    function_declarator   go to state 86
    component_declarator  go to state 318
    simple_component      go to state 140
    bit_field             go to state 141


state 238

  108 structure_type_definition: STRUCT structure_tag '{' field_list '}' .

    $default  reduce using rule 108 (structure_type_definition)


state 239

  125 union_type_definition: UNION union_tag '{' field_list '}' .

    $default  reduce using rule 125 (union_type_definition)


state 240

   27 direct_declarator: '(' . declarator ')'
  138 direct_abstract_declarator: '(' . abstract_declarator ')'
  147                           | '(' . ')'
  150                           | '(' . parameter_type_list ')'

    IDENT         shift, and go to state 77
    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22
    '('           shift, and go to state 240
    ')'           shift, and go to state 319
    '*'           shift, and go to state 79
    '['           shift, and go to state 241

    declaration_specifier        go to state 153
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    declarator                   go to state 118
    direct_declarator            go to state 81
    simple_declarator            go to state 82
    pointer_declarator           go to state 83
    pointer                      go to state 243
    array_declarator             go to state 85
    function_declarator          go to state 86
    parameter_type_list          go to state 320
    parameter_list               go to state 155
    parameter_declaration        go to state 156
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46
    abstract_declarator          go to state 321
    direct_abstract_declarator   go to state 245


state 241

  139 direct_abstract_declarator: '[' . ']'
  142                           | '[' . constant_expression ']'
  143                           | '[' . expression ']'
  145                           | '[' . '*' ']'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 322
    ']'         shift, and go to state 323
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    constant_expression        go to state 324
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 325
    assignment_expression      go to state 204
    expression                 go to state 326


state 242

   48 parameter_declaration: declaration_specifier declarator .

    $default  reduce using rule 48 (parameter_declaration)


state 243

   31 pointer_declarator: pointer . direct_declarator
  131 abstract_declarator: pointer .
  133                    | pointer . direct_abstract_declarator

    IDENT  shift, and go to state 77
    '('    shift, and go to state 240
    '['    shift, and go to state 241

    $default  reduce using rule 131 (abstract_declarator)

    direct_declarator           go to state 127
    simple_declarator           go to state 82
    array_declarator            go to state 85
    function_declarator         go to state 86
    direct_abstract_declarator  go to state 327


state 244

   50 parameter_declaration: declaration_specifier abstract_declarator .

    $default  reduce using rule 50 (parameter_declaration)


state 245

  132 abstract_declarator: direct_abstract_declarator .
  140 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  141                           | direct_abstract_declarator . '[' constant_expression ']'
  144                           | direct_abstract_declarator . '[' expression ']'
  146                           | direct_abstract_declarator . '[' '*' ']'
  148                           | direct_abstract_declarator . '(' ')'
  149                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 328
    '['  shift, and go to state 329

    $default  reduce using rule 132 (abstract_declarator)


state 246

   41 function_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 41 (function_declarator)


state 247

   45 parameter_type_list: parameter_list ',' . ELLIPSIS
   47 parameter_list: parameter_list ',' . parameter_declaration

    ELLIPSIS      shift, and go to state 330
    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22

    declaration_specifier        go to state 153
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    parameter_declaration        go to state 331
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 248

   43 function_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 43 (function_declarator)


state 249

  153 primary_expression: '(' . expression ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 254


state 250

  176 unary_expression: PLUSPLUS unary_expression .

    $default  reduce using rule 176 (unary_expression)


state 251

  177 unary_expression: MINUSMINUS unary_expression .

    $default  reduce using rule 177 (unary_expression)


state 252

  168 unary_expression: SIZEOF '(' . type_name ')'
  169                 | SIZEOF '(' . unary_expression ')'

    IDENT         shift, and go to state 158
    NUMBER        shift, and go to state 159
    PLUSPLUS      shift, and go to state 160
    MINUSMINUS    shift, and go to state 161
    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    SIZEOF        shift, and go to state 162
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22
    '('           shift, and go to state 249
    '*'           shift, and go to state 164
    '-'           shift, and go to state 166
    '+'           shift, and go to state 167
    '!'           shift, and go to state 168
    '~'           shift, and go to state 169
    '&'           shift, and go to state 170

    declaration_specifier        go to state 332
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46
    type_name                    go to state 333
    primary_expression           go to state 172
    postfix_expression           go to state 173
    function_call                go to state 174
    unary_expression             go to state 334


state 253

  166 cast_expression: '(' INT . ')' cast_expression

    ')'  shift, and go to state 335


state 254

  153 primary_expression: '(' expression . ')'
  221 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 336
    ','  shift, and go to state 312


state 255

  175 unary_expression: '*' cast_expression .

    $default  reduce using rule 175 (unary_expression)


state 256

  170 unary_expression: '-' cast_expression .

    $default  reduce using rule 170 (unary_expression)


state 257

  171 unary_expression: '+' cast_expression .

    $default  reduce using rule 171 (unary_expression)


state 258

  172 unary_expression: '!' cast_expression .

    $default  reduce using rule 172 (unary_expression)


state 259

  173 unary_expression: '~' cast_expression .

    $default  reduce using rule 173 (unary_expression)


state 260

  174 unary_expression: '&' cast_expression .

    $default  reduce using rule 174 (unary_expression)


state 261

   39 array_declarator: direct_declarator '[' constant_expression ']' .

    $default  reduce using rule 39 (array_declarator)


state 262

  157 postfix_expression: postfix_expression INDSEL . IDENT

    IDENT  shift, and go to state 337


state 263

  159 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 159 (postfix_expression)


state 264

  160 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 160 (postfix_expression)


state 265

  161 function_call: postfix_expression '(' . ')'
  162              | postfix_expression '(' . expression_list ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    ')'         shift, and go to state 338
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    expression_list            go to state 339
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 340


state 266

  155 postfix_expression: postfix_expression '[' . expression ']'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 341


state 267

  156 postfix_expression: postfix_expression '.' . IDENT

    IDENT  shift, and go to state 342


state 268

  179 multiplicative_expression: multiplicative_expression '*' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 343
    unary_expression    go to state 176


state 269

  180 multiplicative_expression: multiplicative_expression '/' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 344
    unary_expression    go to state 176


state 270

  181 multiplicative_expression: multiplicative_expression '%' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 345
    unary_expression    go to state 176


state 271

  184 additive_expression: additive_expression '-' . multiplicative_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 346


state 272

  183 additive_expression: additive_expression '+' . multiplicative_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 347


state 273

  186 shift_expression: shift_expression SHL . additive_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 348


state 274

  187 shift_expression: shift_expression SHR . additive_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 349


state 275

  190 relational_expression: relational_expression LTEQ . shift_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 350


state 276

  192 relational_expression: relational_expression GTEQ . shift_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 351


state 277

  189 relational_expression: relational_expression '<' . shift_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 352


state 278

  191 relational_expression: relational_expression '>' . shift_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 353


state 279

  194 equality_expression: equality_expression EQEQ . relational_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 354


state 280

  195 equality_expression: equality_expression NOTEQ . relational_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 355


state 281

  197 bit_or_expression: bit_or_expression '|' . bit_xor_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_xor_expression         go to state 356
    bit_and_expression         go to state 184


state 282

  199 bit_xor_expression: bit_xor_expression '^' . bit_and_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_and_expression         go to state 357


state 283

  201 bit_and_expression: bit_and_expression '&' . equality_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 358


state 284

  203 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_and_expression     go to state 359


state 285

  207 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 360


state 286

  205 logical_and_expression: logical_and_expression LOGAND . bit_or_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 361
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184


state 287

  271 break_statement: BREAK ';' .

    $default  reduce using rule 271 (break_statement)


state 288

  269 case_label: CASE constant_expression .

    $default  reduce using rule 269 (case_label)


state 289

  272 continue_statement: CONTINUE ';' .

    $default  reduce using rule 272 (continue_statement)


state 290

  256 do_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 362


state 291

  259 for_expression: '(' . ';' ';' ')'
  260               | '(' . initial_clause ';' ';' ')'
  261               | '(' . ';' expression ';' ')'
  262               | '(' . ';' ';' expression ')'
  263               | '(' . initial_clause ';' expression ';' ')'
  264               | '(' . ';' expression ';' expression ')'
  265               | '(' . initial_clause ';' expression ';' expression ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    INT         shift, and go to state 122
    SIZEOF      shift, and go to state 162
    ';'         shift, and go to state 363
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    declaration                go to state 364
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 365
    initial_clause             go to state 366


state 292

  258 for_statement: FOR for_expression . statement

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 367
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 293

  276 named_label: IDENT .

    $default  reduce using rule 276 (named_label)


state 294

  275 goto_statement: GOTO named_label . ';'

    ';'  shift, and go to state 368


state 295

  251 if_statement: IF '(' . expression ')' statement
  252 if_else_statement: IF '(' . expression ')' statement ELSE statement

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 369


state 296

  273 return_statement: RETURN ';' .

    $default  reduce using rule 273 (return_statement)


state 297

  221 expression: expression . ',' assignment_expression
  274 return_statement: RETURN expression . ';'

    ';'  shift, and go to state 370
    ','  shift, and go to state 312


state 298

  268 switch_statement: SWITCH '(' . expression ')' statement

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 371


state 299

  257 while_statement: WHILE '(' . expression ')' statement

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 372


state 300

  212 assignment_expression: unary_expression TIMESEQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 373


state 301

  213 assignment_expression: unary_expression DIVEQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 374


state 302

  214 assignment_expression: unary_expression MODEQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 375


state 303

  210 assignment_expression: unary_expression PLUSEQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 376


state 304

  211 assignment_expression: unary_expression MINUSEQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 377


state 305

  215 assignment_expression: unary_expression SHLEQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 378


state 306

  216 assignment_expression: unary_expression SHREQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 379


state 307

  217 assignment_expression: unary_expression ANDEQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 380


state 308

  218 assignment_expression: unary_expression OREQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 381


state 309

  219 assignment_expression: unary_expression XOREQ . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 382


state 310

  209 assignment_expression: unary_expression '=' . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 383


state 311

  222 statement: expression ';' .

    $default  reduce using rule 222 (statement)


state 312

  221 expression: expression ',' . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 384


state 313

  238 labeled_statement: label ':' . statement

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 385
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 314

  244 compound_statement: '{' $@1 declaration_or_statement_list '}' .

    $default  reduce using rule 244 (compound_statement)


state 315

  246 declaration_or_statement_list: declaration_or_statement_list declaration_or_statement .

    $default  reduce using rule 246 (declaration_or_statement_list)


state 316

   97 enumeration_type_definition: ENUM enumeration_tag '{' enumeration_definition_list ',' '}' .

    $default  reduce using rule 97 (enumeration_type_definition)


state 317

  120 bit_field: declarator ':' width .

    $default  reduce using rule 120 (bit_field)


state 318

  115 component_declaration_list: component_declaration_list ',' component_declarator .

    $default  reduce using rule 115 (component_declaration_list)


state 319

  147 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 147 (direct_abstract_declarator)


state 320

  150 direct_abstract_declarator: '(' parameter_type_list . ')'

    ')'  shift, and go to state 386


state 321

  138 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 387


state 322

  145 direct_abstract_declarator: '[' '*' . ']'
  175 unary_expression: '*' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    ']'         shift, and go to state 388
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 255
    unary_expression    go to state 176


state 323

  139 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 139 (direct_abstract_declarator)


state 324

  142 direct_abstract_declarator: '[' constant_expression . ']'

    ']'  shift, and go to state 389


state 325

   40 constant_expression: conditional_expression .
  208 assignment_expression: conditional_expression .

    ']'       reduce using rule 40 (constant_expression)
    ']'       [reduce using rule 208 (assignment_expression)]
    ','       reduce using rule 208 (assignment_expression)
    $default  reduce using rule 40 (constant_expression)


state 326

  143 direct_abstract_declarator: '[' expression . ']'
  221 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 390
    ','  shift, and go to state 312


state 327

  133 abstract_declarator: pointer direct_abstract_declarator .
  140 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  141                           | direct_abstract_declarator . '[' constant_expression ']'
  144                           | direct_abstract_declarator . '[' expression ']'
  146                           | direct_abstract_declarator . '[' '*' ']'
  148                           | direct_abstract_declarator . '(' ')'
  149                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 328
    '['  shift, and go to state 329

    $default  reduce using rule 133 (abstract_declarator)


state 328

  148 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
  149                           | direct_abstract_declarator '(' . parameter_type_list ')'

    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22
    ')'           shift, and go to state 391

    declaration_specifier        go to state 153
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    parameter_type_list          go to state 392
    parameter_list               go to state 155
    parameter_declaration        go to state 156
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46


state 329

  140 direct_abstract_declarator: direct_abstract_declarator '[' . ']'
  141                           | direct_abstract_declarator '[' . constant_expression ']'
  144                           | direct_abstract_declarator '[' . expression ']'
  146                           | direct_abstract_declarator '[' . '*' ']'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 393
    ']'         shift, and go to state 394
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    constant_expression        go to state 395
    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 325
    assignment_expression      go to state 204
    expression                 go to state 396


state 330

   45 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 45 (parameter_type_list)


state 331

   47 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 47 (parameter_list)


state 332

  129 type_name: declaration_specifier .
  130          | declaration_specifier . abstract_declarator

    '('  shift, and go to state 397
    '*'  shift, and go to state 79
    '['  shift, and go to state 241

    $default  reduce using rule 129 (type_name)

    pointer                     go to state 398
    abstract_declarator         go to state 399
    direct_abstract_declarator  go to state 245


state 333

  168 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 400


state 334

  169 unary_expression: SIZEOF '(' unary_expression . ')'

    ')'  shift, and go to state 401


state 335

  166 cast_expression: '(' INT ')' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 402
    unary_expression    go to state 176


state 336

  153 primary_expression: '(' expression ')' .

    $default  reduce using rule 153 (primary_expression)


state 337

  157 postfix_expression: postfix_expression INDSEL IDENT .

    $default  reduce using rule 157 (postfix_expression)


state 338

  161 function_call: postfix_expression '(' ')' .

    $default  reduce using rule 161 (function_call)


state 339

  162 function_call: postfix_expression '(' expression_list . ')'
  164 expression_list: expression_list . ',' assignment_expression

    ')'  shift, and go to state 403
    ','  shift, and go to state 404


state 340

  163 expression_list: assignment_expression .

    $default  reduce using rule 163 (expression_list)


state 341

  155 postfix_expression: postfix_expression '[' expression . ']'
  221 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 405
    ','  shift, and go to state 312


state 342

  156 postfix_expression: postfix_expression '.' IDENT .

    $default  reduce using rule 156 (postfix_expression)


state 343

  179 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 179 (multiplicative_expression)


state 344

  180 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 180 (multiplicative_expression)


state 345

  181 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 181 (multiplicative_expression)


state 346

  179 multiplicative_expression: multiplicative_expression . '*' cast_expression
  180                          | multiplicative_expression . '/' cast_expression
  181                          | multiplicative_expression . '%' cast_expression
  184 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 268
    '/'  shift, and go to state 269
    '%'  shift, and go to state 270

    $default  reduce using rule 184 (additive_expression)


state 347

  179 multiplicative_expression: multiplicative_expression . '*' cast_expression
  180                          | multiplicative_expression . '/' cast_expression
  181                          | multiplicative_expression . '%' cast_expression
  183 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 268
    '/'  shift, and go to state 269
    '%'  shift, and go to state 270

    $default  reduce using rule 183 (additive_expression)


state 348

  183 additive_expression: additive_expression . '+' multiplicative_expression
  184                    | additive_expression . '-' multiplicative_expression
  186 shift_expression: shift_expression SHL additive_expression .

    '-'  shift, and go to state 271
    '+'  shift, and go to state 272

    $default  reduce using rule 186 (shift_expression)


state 349

  183 additive_expression: additive_expression . '+' multiplicative_expression
  184                    | additive_expression . '-' multiplicative_expression
  187 shift_expression: shift_expression SHR additive_expression .

    '-'  shift, and go to state 271
    '+'  shift, and go to state 272

    $default  reduce using rule 187 (shift_expression)


state 350

  186 shift_expression: shift_expression . SHL additive_expression
  187                 | shift_expression . SHR additive_expression
  190 relational_expression: relational_expression LTEQ shift_expression .

    SHL  shift, and go to state 273
    SHR  shift, and go to state 274

    $default  reduce using rule 190 (relational_expression)


state 351

  186 shift_expression: shift_expression . SHL additive_expression
  187                 | shift_expression . SHR additive_expression
  192 relational_expression: relational_expression GTEQ shift_expression .

    SHL  shift, and go to state 273
    SHR  shift, and go to state 274

    $default  reduce using rule 192 (relational_expression)


state 352

  186 shift_expression: shift_expression . SHL additive_expression
  187                 | shift_expression . SHR additive_expression
  189 relational_expression: relational_expression '<' shift_expression .

    SHL  shift, and go to state 273
    SHR  shift, and go to state 274

    $default  reduce using rule 189 (relational_expression)


state 353

  186 shift_expression: shift_expression . SHL additive_expression
  187                 | shift_expression . SHR additive_expression
  191 relational_expression: relational_expression '>' shift_expression .

    SHL  shift, and go to state 273
    SHR  shift, and go to state 274

    $default  reduce using rule 191 (relational_expression)


state 354

  189 relational_expression: relational_expression . '<' shift_expression
  190                      | relational_expression . LTEQ shift_expression
  191                      | relational_expression . '>' shift_expression
  192                      | relational_expression . GTEQ shift_expression
  194 equality_expression: equality_expression EQEQ relational_expression .

    LTEQ  shift, and go to state 275
    GTEQ  shift, and go to state 276
    '<'   shift, and go to state 277
    '>'   shift, and go to state 278

    $default  reduce using rule 194 (equality_expression)


state 355

  189 relational_expression: relational_expression . '<' shift_expression
  190                      | relational_expression . LTEQ shift_expression
  191                      | relational_expression . '>' shift_expression
  192                      | relational_expression . GTEQ shift_expression
  195 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 275
    GTEQ  shift, and go to state 276
    '<'   shift, and go to state 277
    '>'   shift, and go to state 278

    $default  reduce using rule 195 (equality_expression)


state 356

  197 bit_or_expression: bit_or_expression '|' bit_xor_expression .
  199 bit_xor_expression: bit_xor_expression . '^' bit_and_expression

    '^'  shift, and go to state 282

    $default  reduce using rule 197 (bit_or_expression)


state 357

  199 bit_xor_expression: bit_xor_expression '^' bit_and_expression .
  201 bit_and_expression: bit_and_expression . '&' equality_expression

    '&'  shift, and go to state 283

    $default  reduce using rule 199 (bit_xor_expression)


state 358

  194 equality_expression: equality_expression . EQEQ relational_expression
  195                    | equality_expression . NOTEQ relational_expression
  201 bit_and_expression: bit_and_expression '&' equality_expression .

    EQEQ   shift, and go to state 279
    NOTEQ  shift, and go to state 280

    $default  reduce using rule 201 (bit_and_expression)


state 359

  203 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  205 logical_and_expression: logical_and_expression . LOGAND bit_or_expression

    LOGAND  shift, and go to state 286

    $default  reduce using rule 203 (logical_or_expression)


state 360

  207 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
  221 expression: expression . ',' assignment_expression

    ','  shift, and go to state 312
    ':'  shift, and go to state 406


state 361

  197 bit_or_expression: bit_or_expression . '|' bit_xor_expression
  205 logical_and_expression: logical_and_expression LOGAND bit_or_expression .

    '|'  shift, and go to state 281

    $default  reduce using rule 205 (logical_and_expression)


state 362

  256 do_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 407


state 363

  259 for_expression: '(' ';' . ';' ')'
  261               | '(' ';' . expression ';' ')'
  262               | '(' ';' . ';' expression ')'
  264               | '(' ';' . expression ';' expression ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    ';'         shift, and go to state 408
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 409


state 364

  267 initial_clause: declaration .

    $default  reduce using rule 267 (initial_clause)


state 365

  221 expression: expression . ',' assignment_expression
  266 initial_clause: expression .

    ','  shift, and go to state 312

    $default  reduce using rule 266 (initial_clause)


state 366

  260 for_expression: '(' initial_clause . ';' ';' ')'
  263               | '(' initial_clause . ';' expression ';' ')'
  265               | '(' initial_clause . ';' expression ';' expression ')'

    ';'  shift, and go to state 410


state 367

  258 for_statement: FOR for_expression statement .

    $default  reduce using rule 258 (for_statement)


state 368

  275 goto_statement: GOTO named_label ';' .

    $default  reduce using rule 275 (goto_statement)


state 369

  221 expression: expression . ',' assignment_expression
  251 if_statement: IF '(' expression . ')' statement
  252 if_else_statement: IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 411
    ','  shift, and go to state 312


state 370

  274 return_statement: RETURN expression ';' .

    $default  reduce using rule 274 (return_statement)


state 371

  221 expression: expression . ',' assignment_expression
  268 switch_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 412
    ','  shift, and go to state 312


state 372

  221 expression: expression . ',' assignment_expression
  257 while_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 413
    ','  shift, and go to state 312


state 373

  212 assignment_expression: unary_expression TIMESEQ assignment_expression .

    $default  reduce using rule 212 (assignment_expression)


state 374

  213 assignment_expression: unary_expression DIVEQ assignment_expression .

    $default  reduce using rule 213 (assignment_expression)


state 375

  214 assignment_expression: unary_expression MODEQ assignment_expression .

    $default  reduce using rule 214 (assignment_expression)


state 376

  210 assignment_expression: unary_expression PLUSEQ assignment_expression .

    $default  reduce using rule 210 (assignment_expression)


state 377

  211 assignment_expression: unary_expression MINUSEQ assignment_expression .

    $default  reduce using rule 211 (assignment_expression)


state 378

  215 assignment_expression: unary_expression SHLEQ assignment_expression .

    $default  reduce using rule 215 (assignment_expression)


state 379

  216 assignment_expression: unary_expression SHREQ assignment_expression .

    $default  reduce using rule 216 (assignment_expression)


state 380

  217 assignment_expression: unary_expression ANDEQ assignment_expression .

    $default  reduce using rule 217 (assignment_expression)


state 381

  218 assignment_expression: unary_expression OREQ assignment_expression .

    $default  reduce using rule 218 (assignment_expression)


state 382

  219 assignment_expression: unary_expression XOREQ assignment_expression .

    $default  reduce using rule 219 (assignment_expression)


state 383

  209 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 209 (assignment_expression)


state 384

  221 expression: expression ',' assignment_expression .

    $default  reduce using rule 221 (expression)


state 385

  238 labeled_statement: label ':' statement .

    $default  reduce using rule 238 (labeled_statement)


state 386

  150 direct_abstract_declarator: '(' parameter_type_list ')' .

    $default  reduce using rule 150 (direct_abstract_declarator)


state 387

  138 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 138 (direct_abstract_declarator)


state 388

  145 direct_abstract_declarator: '[' '*' ']' .

    $default  reduce using rule 145 (direct_abstract_declarator)


state 389

  142 direct_abstract_declarator: '[' constant_expression ']' .

    $default  reduce using rule 142 (direct_abstract_declarator)


state 390

  143 direct_abstract_declarator: '[' expression ']' .

    $default  reduce using rule 143 (direct_abstract_declarator)


state 391

  148 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 148 (direct_abstract_declarator)


state 392

  149 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 414


state 393

  146 direct_abstract_declarator: direct_abstract_declarator '[' '*' . ']'
  175 unary_expression: '*' . cast_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    ']'         shift, and go to state 415
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression  go to state 172
    postfix_expression  go to state 173
    function_call       go to state 174
    cast_expression     go to state 255
    unary_expression    go to state 176


state 394

  140 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 140 (direct_abstract_declarator)


state 395

  141 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 416


state 396

  144 direct_abstract_declarator: direct_abstract_declarator '[' expression . ']'
  221 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 417
    ','  shift, and go to state 312


state 397

  138 direct_abstract_declarator: '(' . abstract_declarator ')'
  147                           | '(' . ')'
  150                           | '(' . parameter_type_list ')'

    AUTO          shift, and go to state 2
    CHAR          shift, and go to state 3
    CONST         shift, and go to state 4
    DOUBLE        shift, and go to state 5
    ENUM          shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT         shift, and go to state 8
    INT           shift, and go to state 87
    LONG          shift, and go to state 10
    RESTRICT      shift, and go to state 11
    SHORT         shift, and go to state 12
    SIGNED        shift, and go to state 13
    STATIC        shift, and go to state 14
    STRUCT        shift, and go to state 15
    TYPEDEF       shift, and go to state 16
    TYPEDEF_NAME  shift, and go to state 17
    UNION         shift, and go to state 18
    UNSIGNED      shift, and go to state 19
    VOID          shift, and go to state 20
    VOLATILE      shift, and go to state 21
    _BOOL         shift, and go to state 22
    '('           shift, and go to state 397
    ')'           shift, and go to state 319
    '*'           shift, and go to state 79
    '['           shift, and go to state 241

    declaration_specifier        go to state 153
    storage_class_specifier      go to state 25
    typedef_definition           go to state 26
    type_specifier               go to state 27
    type_qualifier               go to state 28
    pointer                      go to state 398
    parameter_type_list          go to state 320
    parameter_list               go to state 155
    parameter_declaration        go to state 156
    integer_type_specifier       go to state 29
    unsigned_type_specifier      go to state 30
    signed_type_specifier        go to state 31
    character_type_specifier     go to state 32
    floating_point_specifier     go to state 33
    complex_type_specifier       go to state 34
    void_type_specifier          go to state 35
    bool_type_specifier          go to state 36
    enumeration_type_specifier   go to state 37
    enumeration_type_definition  go to state 38
    enumeration_type_reference   go to state 39
    structure_type_specifier     go to state 40
    structure_type_definition    go to state 41
    structure_type_reference     go to state 42
    union_type_specifier         go to state 43
    union_type_definition        go to state 44
    union_type_reference         go to state 45
    typedef_name                 go to state 46
    abstract_declarator          go to state 321
    direct_abstract_declarator   go to state 245


state 398

  131 abstract_declarator: pointer .
  133                    | pointer . direct_abstract_declarator

    '('  shift, and go to state 397
    '['  shift, and go to state 241

    $default  reduce using rule 131 (abstract_declarator)

    direct_abstract_declarator  go to state 327


state 399

  130 type_name: declaration_specifier abstract_declarator .

    $default  reduce using rule 130 (type_name)


state 400

  168 unary_expression: SIZEOF '(' type_name ')' .

    $default  reduce using rule 168 (unary_expression)


state 401

  169 unary_expression: SIZEOF '(' unary_expression ')' .

    $default  reduce using rule 169 (unary_expression)


state 402

  166 cast_expression: '(' INT ')' cast_expression .

    $default  reduce using rule 166 (cast_expression)


state 403

  162 function_call: postfix_expression '(' expression_list ')' .

    $default  reduce using rule 162 (function_call)


state 404

  164 expression_list: expression_list ',' . assignment_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 418


state 405

  155 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 155 (postfix_expression)


state 406

  207 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 176
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 419


state 407

  256 do_statement: DO statement WHILE '(' . expression ')' ';'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 420


state 408

  259 for_expression: '(' ';' ';' . ')'
  262               | '(' ';' ';' . expression ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    ')'         shift, and go to state 421
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 422


state 409

  221 expression: expression . ',' assignment_expression
  261 for_expression: '(' ';' expression . ';' ')'
  264               | '(' ';' expression . ';' expression ')'

    ';'  shift, and go to state 423
    ','  shift, and go to state 312


state 410

  260 for_expression: '(' initial_clause ';' . ';' ')'
  263               | '(' initial_clause ';' . expression ';' ')'
  265               | '(' initial_clause ';' . expression ';' expression ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    ';'         shift, and go to state 424
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 425


state 411

  251 if_statement: IF '(' expression ')' . statement
  252 if_else_statement: IF '(' expression ')' . statement ELSE statement

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 426
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 412

  268 switch_statement: SWITCH '(' expression ')' . statement

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 427
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 413

  257 while_statement: WHILE '(' expression ')' . statement

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 428
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 414

  149 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 149 (direct_abstract_declarator)


state 415

  146 direct_abstract_declarator: direct_abstract_declarator '[' '*' ']' .

    $default  reduce using rule 146 (direct_abstract_declarator)


state 416

  141 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' .

    $default  reduce using rule 141 (direct_abstract_declarator)


state 417

  144 direct_abstract_declarator: direct_abstract_declarator '[' expression ']' .

    $default  reduce using rule 144 (direct_abstract_declarator)


state 418

  164 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 164 (expression_list)


state 419

  207 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 207 (conditional_expression)


state 420

  221 expression: expression . ',' assignment_expression
  256 do_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 429
    ','  shift, and go to state 312


state 421

  259 for_expression: '(' ';' ';' ')' .

    $default  reduce using rule 259 (for_expression)


state 422

  221 expression: expression . ',' assignment_expression
  262 for_expression: '(' ';' ';' expression . ')'

    ')'  shift, and go to state 430
    ','  shift, and go to state 312


state 423

  261 for_expression: '(' ';' expression ';' . ')'
  264               | '(' ';' expression ';' . expression ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    ')'         shift, and go to state 431
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 432


state 424

  260 for_expression: '(' initial_clause ';' ';' . ')'

    ')'  shift, and go to state 433


state 425

  221 expression: expression . ',' assignment_expression
  263 for_expression: '(' initial_clause ';' expression . ';' ')'
  265               | '(' initial_clause ';' expression . ';' expression ')'

    ';'  shift, and go to state 434
    ','  shift, and go to state 312


state 426

  251 if_statement: IF '(' expression ')' statement .
  252 if_else_statement: IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 435

    ELSE      [reduce using rule 251 (if_statement)]
    $default  reduce using rule 251 (if_statement)


state 427

  268 switch_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 268 (switch_statement)


state 428

  257 while_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 257 (while_statement)


state 429

  256 do_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 436


state 430

  262 for_expression: '(' ';' ';' expression ')' .

    $default  reduce using rule 262 (for_expression)


state 431

  261 for_expression: '(' ';' expression ';' ')' .

    $default  reduce using rule 261 (for_expression)


state 432

  221 expression: expression . ',' assignment_expression
  264 for_expression: '(' ';' expression ';' expression . ')'

    ')'  shift, and go to state 437
    ','  shift, and go to state 312


state 433

  260 for_expression: '(' initial_clause ';' ';' ')' .

    $default  reduce using rule 260 (for_expression)


state 434

  263 for_expression: '(' initial_clause ';' expression ';' . ')'
  265               | '(' initial_clause ';' expression ';' . expression ')'

    IDENT       shift, and go to state 158
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    SIZEOF      shift, and go to state 162
    '('         shift, and go to state 163
    ')'         shift, and go to state 438
    '*'         shift, and go to state 164
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 439


state 435

  252 if_else_statement: IF '(' expression ')' statement ELSE . statement

    IDENT       shift, and go to state 188
    NUMBER      shift, and go to state 159
    PLUSPLUS    shift, and go to state 160
    MINUSMINUS  shift, and go to state 161
    BREAK       shift, and go to state 189
    CASE        shift, and go to state 190
    CONTINUE    shift, and go to state 191
    DEFAULT     shift, and go to state 192
    DO          shift, and go to state 193
    FOR         shift, and go to state 194
    GOTO        shift, and go to state 195
    IF          shift, and go to state 196
    RETURN      shift, and go to state 197
    SIZEOF      shift, and go to state 162
    SWITCH      shift, and go to state 198
    WHILE       shift, and go to state 199
    ';'         shift, and go to state 200
    '('         shift, and go to state 163
    '*'         shift, and go to state 164
    '{'         shift, and go to state 94
    '-'         shift, and go to state 166
    '+'         shift, and go to state 167
    '!'         shift, and go to state 168
    '~'         shift, and go to state 169
    '&'         shift, and go to state 170

    primary_expression         go to state 172
    postfix_expression         go to state 173
    function_call              go to state 174
    cast_expression            go to state 175
    unary_expression           go to state 202
    multiplicative_expression  go to state 177
    additive_expression        go to state 178
    shift_expression           go to state 179
    relational_expression      go to state 180
    equality_expression        go to state 181
    bit_or_expression          go to state 182
    bit_xor_expression         go to state 183
    bit_and_expression         go to state 184
    logical_or_expression      go to state 185
    logical_and_expression     go to state 186
    conditional_expression     go to state 203
    assignment_expression      go to state 204
    expression                 go to state 205
    statement                  go to state 440
    conditional_statement      go to state 207
    iterative_statement        go to state 208
    labeled_statement          go to state 209
    label                      go to state 210
    compound_statement         go to state 211
    if_statement               go to state 214
    if_else_statement          go to state 215
    do_statement               go to state 216
    while_statement            go to state 217
    for_statement              go to state 218
    switch_statement           go to state 219
    case_label                 go to state 220
    default_label              go to state 221
    break_statement            go to state 222
    continue_statement         go to state 223
    return_statement           go to state 224
    goto_statement             go to state 225
    named_label                go to state 226
    null_statement             go to state 227


state 436

  256 do_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 256 (do_statement)


state 437

  264 for_expression: '(' ';' expression ';' expression ')' .

    $default  reduce using rule 264 (for_expression)


state 438

  263 for_expression: '(' initial_clause ';' expression ';' ')' .

    $default  reduce using rule 263 (for_expression)


state 439

  221 expression: expression . ',' assignment_expression
  265 for_expression: '(' initial_clause ';' expression ';' expression . ')'

    ')'  shift, and go to state 441
    ','  shift, and go to state 312


state 440

  252 if_else_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 252 (if_else_statement)


state 441

  265 for_expression: '(' initial_clause ';' expression ';' expression ')' .

    $default  reduce using rule 265 (for_expression)
